{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10","program":"C:\\Users\\milla\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","crossbeam_epoch","--edition=2018","C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"once_cell\"","--cfg","feature=\"std\"","-C","metadata=1b58839cef057439","-C","extra-filename=-1b58839cef057439","--out-dir","c:\\Users\\milla\\Desktop\\coding\\TicTacToe\\tictactoe\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\milla\\Desktop\\coding\\TicTacToe\\tictactoe\\target\\rls\\debug\\deps","--extern","cfg_if=c:\\Users\\milla\\Desktop\\coding\\TicTacToe\\tictactoe\\target\\rls\\debug\\deps\\libcfg_if-6c29c3ed93149f37.rmeta","--extern","crossbeam_utils=c:\\Users\\milla\\Desktop\\coding\\TicTacToe\\tictactoe\\target\\rls\\debug\\deps\\libcrossbeam_utils-92325df8cdfbd354.rmeta","--extern","memoffset=c:\\Users\\milla\\Desktop\\coding\\TicTacToe\\tictactoe\\target\\rls\\debug\\deps\\libmemoffset-624efef33f66c067.rmeta","--extern","once_cell=c:\\Users\\milla\\Desktop\\coding\\TicTacToe\\tictactoe\\target\\rls\\debug\\deps\\libonce_cell-efc3409662771fdf.rmeta","--extern","scopeguard=c:\\Users\\milla\\Desktop\\coding\\TicTacToe\\tictactoe\\target\\rls\\debug\\deps\\libscopeguard-7c6b72af7c696a3b.rmeta","--cap-lints","allow","--cfg","crossbeam_no_const_fn_trait_bound","--error-format=json","--sysroot","C:\\Users\\milla\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\milla\\Desktop\\coding\\TicTacToe\\tictactoe\\target\\rls\\debug\\deps\\libcrossbeam_epoch-1b58839cef057439.rmeta"},"prelude":{"crate_id":{"name":"crossbeam_epoch","disambiguator":[6054310748905924571,0]},"crate_root":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src","external_crates":[{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[7379719041391505039,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[5226548339696486402,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15782588708828798436,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11258588358156983047,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6811839233127289238,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[6798478037195512723,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12572258325454906649,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[598470195457823820,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7285820039251336650,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15004074270013699283,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[6568562326383462027,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[7532148157145861684,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[15660406440960571571,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","num":14,"id":{"name":"cfg_if","disambiguator":[10169579803109374085,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","num":15,"id":{"name":"crossbeam_utils","disambiguator":[9233241470885335700,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\default.rs","num":16,"id":{"name":"once_cell","disambiguator":[1578848876197254536,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","num":17,"id":{"name":"scopeguard","disambiguator":[609407471197110695,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\internal.rs","num":18,"id":{"name":"memoffset","disambiguator":[16599716928682691103,0]}}],"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":0,"byte_end":6324,"line_start":1,"line_end":169,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":5873,"byte_end":5882,"line_start":153,"line_end":153,"column_start":13,"column_end":22},"alias_span":null,"name":"Pointable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":5884,"byte_end":5890,"line_start":153,"line_end":153,"column_start":24,"column_end":30},"alias_span":null,"name":"Atomic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":5892,"byte_end":5912,"line_start":153,"line_end":153,"column_start":32,"column_end":52},"alias_span":null,"name":"CompareExchangeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":5926,"byte_end":5931,"line_start":154,"line_end":154,"column_start":13,"column_end":18},"alias_span":null,"name":"Owned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":5933,"byte_end":5940,"line_start":154,"line_end":154,"column_start":20,"column_end":27},"alias_span":null,"name":"Pointer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":301},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":5942,"byte_end":5948,"line_start":154,"line_end":154,"column_start":29,"column_end":35},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":373},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":5995,"byte_end":6004,"line_start":156,"line_end":156,"column_start":35,"column_end":44},"alias_span":null,"name":"Collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":389},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":6006,"byte_end":6017,"line_start":156,"line_end":156,"column_start":46,"column_end":57},"alias_span":null,"name":"LocalHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":503},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":6050,"byte_end":6061,"line_start":157,"line_end":157,"column_start":31,"column_end":42},"alias_span":null,"name":"unprotected","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":479},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":6063,"byte_end":6068,"line_start":157,"line_end":157,"column_start":44,"column_end":49},"alias_span":null,"name":"Guard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":6132,"byte_end":6150,"line_start":160,"line_end":160,"column_start":32,"column_end":50},"alias_span":null,"name":"CompareAndSetError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":6152,"byte_end":6173,"line_start":160,"line_end":160,"column_start":52,"column_end":73},"alias_span":null,"name":"CompareAndSetOrdering","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":897},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":6281,"byte_end":6298,"line_start":167,"line_end":167,"column_start":33,"column_end":50},"alias_span":null,"name":"default_collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":895},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":6300,"byte_end":6309,"line_start":167,"line_end":167,"column_start":52,"column_end":61},"alias_span":null,"name":"is_pinned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":893},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":6311,"byte_end":6314,"line_start":167,"line_end":167,"column_start":63,"column_end":66},"alias_span":null,"name":"pin","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":0,"byte_end":6324,"line_start":1,"line_end":169,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":356},{"krate":0,"index":399},{"krate":0,"index":438},{"krate":0,"index":457},{"krate":0,"index":509},{"krate":0,"index":655},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":782},{"krate":0,"index":785},{"krate":0,"index":788},{"krate":0,"index":791},{"krate":0,"index":794},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":801},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":808},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":815},{"krate":0,"index":875},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":907},{"krate":0,"index":910}],"decl_id":null,"docs":" Epoch-based memory reclamation.","sig":null,"attributes":[{"value":"/ Epoch-based memory reclamation.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":0,"byte_end":35,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":36,"byte_end":39,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ An interesting problem concurrent collections deal with comes from the remove operation.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":40,"byte_end":132,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ Suppose that a thread removes an element from a lock-free map, while another thread is reading","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":133,"byte_end":231,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ that same element at the same time. The first thread must wait until the second thread stops","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":232,"byte_end":328,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ reading the element. Only then it is safe to destruct it.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":329,"byte_end":390,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":391,"byte_end":394,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Programming languages that come with garbage collectors solve this problem trivially. The","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":395,"byte_end":488,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/ garbage collector will destruct the removed element when no thread can hold a reference to it","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":489,"byte_end":586,"line_start":9,"line_end":9,"column_start":1,"column_end":98}},{"value":"/ anymore.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":587,"byte_end":599,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":600,"byte_end":603,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This crate implements a basic memory reclamation mechanism, which is based on epochs. When an","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":604,"byte_end":701,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ element gets removed from a concurrent collection, it is inserted into a pile of garbage and","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":702,"byte_end":798,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ marked with the current epoch. Every time a thread accesses a collection, it checks the current","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":799,"byte_end":898,"line_start":14,"line_end":14,"column_start":1,"column_end":100}},{"value":"/ epoch, attempts to increment it, and destructs some garbage that became so old that no thread","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":899,"byte_end":996,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ can be referencing it anymore.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":997,"byte_end":1031,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":1032,"byte_end":1035,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ That is the general mechanism behind epoch-based memory reclamation, but the details are a bit","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":1036,"byte_end":1134,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ more complicated. Anyhow, memory reclamation is designed to be fully automatic and something","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":1135,"byte_end":1231,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/ users of concurrent collections don't have to worry much about.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":1232,"byte_end":1299,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":1300,"byte_end":1303,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Pointers","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":1304,"byte_end":1318,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":1319,"byte_end":1322,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Concurrent collections are built using atomic pointers. This module provides [`Atomic`], which","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":1323,"byte_end":1421,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/ is just a shared atomic pointer to a heap-allocated object. Loading an [`Atomic`] yields a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":1422,"byte_end":1516,"line_start":25,"line_end":25,"column_start":1,"column_end":95}},{"value":"/ [`Shared`], which is an epoch-protected pointer through which the loaded object can be safely","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":1517,"byte_end":1614,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ read.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":1615,"byte_end":1624,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":1625,"byte_end":1628,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":1629,"byte_end":1642,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":1643,"byte_end":1646,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Before an [`Atomic`] can be loaded, a participant must be [`pin`]ned. By pinning a participant","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":1647,"byte_end":1745,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ we declare that any object that gets removed from now on must not be destructed just","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":1746,"byte_end":1834,"line_start":32,"line_end":32,"column_start":1,"column_end":89}},{"value":"/ yet. Garbage collection of newly removed objects is suspended until the participant gets","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":1835,"byte_end":1927,"line_start":33,"line_end":33,"column_start":1,"column_end":93}},{"value":"/ unpinned.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":1928,"byte_end":1941,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":1942,"byte_end":1945,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Garbage","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":1946,"byte_end":1959,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":1960,"byte_end":1963,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Objects that get removed from concurrent collections must be stashed away until all currently","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":1964,"byte_end":2061,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"/ pinned participants get unpinned. Such objects can be stored into a thread-local or global","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":2062,"byte_end":2156,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/ storage, where they are kept until the right time for their destruction comes.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":2157,"byte_end":2239,"line_start":40,"line_end":40,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":2240,"byte_end":2243,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ There is a global shared instance of garbage queue. You can [`defer`](Guard::defer) the execution of an","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":2244,"byte_end":2351,"line_start":42,"line_end":42,"column_start":1,"column_end":108}},{"value":"/ arbitrary function until the global epoch is advanced enough. Most notably, concurrent data","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":2352,"byte_end":2447,"line_start":43,"line_end":43,"column_start":1,"column_end":96}},{"value":"/ structures may defer the deallocation of an object.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":2448,"byte_end":2503,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":2504,"byte_end":2507,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # APIs","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":2508,"byte_end":2518,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":2519,"byte_end":2522,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ For majority of use cases, just use the default garbage collector by invoking [`pin`]. If you","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":2523,"byte_end":2620,"line_start":48,"line_end":48,"column_start":1,"column_end":98}},{"value":"/ want to create your own garbage collector, use the [`Collector`] API.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":2621,"byte_end":2694,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\nunreachable_pub)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":2855,"byte_end":2961,"line_start":58,"line_end":63,"column_start":1,"column_end":3}}]},{"kind":"Type","id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12928384,"byte_end":12928402,"line_start":31,"line_end":31,"column_start":10,"column_end":28},"name":"CompareAndSetError","qualname":"::atomic::CompareAndSetError","value":"CompareExchangeError","parent":null,"children":[],"decl_id":null,"docs":" The error returned on failed compare-and-set operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-set operation.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12928213,"byte_end":12928272,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"deprecated(note = \"Use `CompareExchangeError` instead\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12928316,"byte_end":12928374,"line_start":30,"line_end":30,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12928520,"byte_end":12928540,"line_start":34,"line_end":34,"column_start":12,"column_end":32},"name":"CompareExchangeError","qualname":"::atomic::CompareExchangeError","value":"CompareExchangeError { current, new }","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105}],"decl_id":null,"docs":" The error returned on failed compare-and-swap operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-swap operation.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12928448,"byte_end":12928508,"line_start":33,"line_end":33,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12928670,"byte_end":12928677,"line_start":36,"line_end":36,"column_start":9,"column_end":16},"name":"current","qualname":"::atomic::CompareExchangeError::current","value":"atomic::Shared<'g, T>","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" The value in the atomic pointer at the time of the failed operation.\n","sig":null,"attributes":[{"value":"/ The value in the atomic pointer at the time of the failed operation.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12928589,"byte_end":12928661,"line_start":35,"line_end":35,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12928763,"byte_end":12928766,"line_start":39,"line_end":39,"column_start":9,"column_end":12},"name":"new","qualname":"::atomic::CompareExchangeError::new","value":"P","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" The new value, which the operation failed to store.\n","sig":null,"attributes":[{"value":"/ The new value, which the operation failed to store.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12928699,"byte_end":12928754,"line_start":38,"line_end":38,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12929877,"byte_end":12929898,"line_start":67,"line_end":67,"column_start":11,"column_end":32},"name":"CompareAndSetOrdering","qualname":"::atomic::CompareAndSetOrdering","value":"CompareAndSetOrdering","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112}],"decl_id":null,"docs":" Memory orderings for compare-and-set operations.","sig":null,"attributes":[{"value":"/ Memory orderings for compare-and-set operations.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12929081,"byte_end":12929133,"line_start":51,"line_end":51,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12929134,"byte_end":12929137,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ A compare-and-set operation can have different memory orderings depending on whether it","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12929138,"byte_end":12929229,"line_start":53,"line_end":53,"column_start":1,"column_end":92}},{"value":"/ succeeds or fails. This trait generalizes different ways of specifying memory orderings.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12929230,"byte_end":12929322,"line_start":54,"line_end":54,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12929323,"byte_end":12929326,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The two ways of specifying orderings for compare-and-set are:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12929327,"byte_end":12929392,"line_start":56,"line_end":56,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12929393,"byte_end":12929396,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ 1. Just one `Ordering` for the success case. In case of failure, the strongest appropriate","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12929397,"byte_end":12929491,"line_start":58,"line_end":58,"column_start":1,"column_end":95}},{"value":"/    ordering is chosen.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12929492,"byte_end":12929518,"line_start":59,"line_end":59,"column_start":1,"column_end":27}},{"value":"/ 2. A pair of `Ordering`s. The first one is for the success case, while the second one is","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12929519,"byte_end":12929611,"line_start":60,"line_end":60,"column_start":1,"column_end":93}},{"value":"/    for the failure case.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12929612,"byte_end":12929640,"line_start":61,"line_end":61,"column_start":1,"column_end":29}},{"value":"deprecated(note =\n\"`compare_and_set` and `compare_and_set_weak` that use this trait are deprecated, \\\n            use `compare_exchange` or `compare_exchange_weak instead`\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12929684,"byte_end":12929866,"line_start":63,"line_end":66,"column_start":1,"column_end":3}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12929964,"byte_end":12929971,"line_start":69,"line_end":69,"column_start":8,"column_end":15},"name":"success","qualname":"::atomic::CompareAndSetOrdering::success","value":"pub fn success(&Self) -> Ordering","parent":{"krate":0,"index":110},"children":[],"decl_id":null,"docs":" The ordering of the operation when it succeeds.\n","sig":null,"attributes":[{"value":"/ The ordering of the operation when it succeeds.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12929905,"byte_end":12929956,"line_start":68,"line_end":68,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12930189,"byte_end":12930196,"line_start":75,"line_end":75,"column_start":8,"column_end":15},"name":"failure","qualname":"::atomic::CompareAndSetOrdering::failure","value":"pub fn failure(&Self) -> Ordering","parent":{"krate":0,"index":110},"children":[],"decl_id":null,"docs":" The ordering of the operation when it fails.","sig":null,"attributes":[{"value":"/ The ordering of the operation when it fails.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12929997,"byte_end":12930045,"line_start":71,"line_end":71,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12930050,"byte_end":12930053,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ The failure ordering can't be `Release` or `AcqRel` and must be equivalent or weaker than","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12930058,"byte_end":12930151,"line_start":73,"line_end":73,"column_start":5,"column_end":98}},{"value":"/ the success ordering.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12930156,"byte_end":12930181,"line_start":74,"line_end":74,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12932546,"byte_end":12932555,"line_start":150,"line_end":150,"column_start":11,"column_end":20},"name":"Pointable","qualname":"::atomic::Pointable","value":"Pointable","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":135}],"decl_id":null,"docs":" Types that are pointed to by a single word.","sig":null,"attributes":[{"value":"/ Types that are pointed to by a single word.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12931573,"byte_end":12931620,"line_start":130,"line_end":130,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12931621,"byte_end":12931624,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ In concurrent programming, it is necessary to represent an object within a word because atomic","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12931625,"byte_end":12931723,"line_start":132,"line_end":132,"column_start":1,"column_end":99}},{"value":"/ operations (e.g., reads, writes, read-modify-writes) support only single words.  This trait","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12931724,"byte_end":12931819,"line_start":133,"line_end":133,"column_start":1,"column_end":96}},{"value":"/ qualifies such types that are pointed to by a single word.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12931820,"byte_end":12931882,"line_start":134,"line_end":134,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12931883,"byte_end":12931886,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ The trait generalizes `Box<T>` for a sized type `T`.  In a box, an object of type `T` is","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12931887,"byte_end":12931979,"line_start":136,"line_end":136,"column_start":1,"column_end":93}},{"value":"/ allocated in heap and it is owned by a single-word pointer.  This trait is also implemented for","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12931980,"byte_end":12932079,"line_start":137,"line_end":137,"column_start":1,"column_end":100}},{"value":"/ `[MaybeUninit<T>]` by storing its size along with its elements and pointing to the pair of array","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12932080,"byte_end":12932180,"line_start":138,"line_end":138,"column_start":1,"column_end":101}},{"value":"/ size and elements.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12932181,"byte_end":12932203,"line_start":139,"line_end":139,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12932204,"byte_end":12932207,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ Pointers to `Pointable` types can be stored in [`Atomic`], [`Owned`], and [`Shared`].  In","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12932208,"byte_end":12932301,"line_start":141,"line_end":141,"column_start":1,"column_end":94}},{"value":"/ particular, Crossbeam supports dynamically sized slices as follows.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12932302,"byte_end":12932373,"line_start":142,"line_end":142,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12932374,"byte_end":12932377,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12932378,"byte_end":12932385,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/ use std::mem::MaybeUninit;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12932386,"byte_end":12932416,"line_start":145,"line_end":145,"column_start":1,"column_end":31}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12932417,"byte_end":12932448,"line_start":146,"line_end":146,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12932449,"byte_end":12932452,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ let o = Owned::<[MaybeUninit<i32>]>::init(10); // allocating [i32; 10]","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12932453,"byte_end":12932527,"line_start":148,"line_end":148,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12932528,"byte_end":12932535,"line_start":149,"line_end":149,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12932602,"byte_end":12932607,"line_start":152,"line_end":152,"column_start":11,"column_end":16},"name":"ALIGN","qualname":"::atomic::Pointable::ALIGN","value":"usize","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" The alignment of pointer.\n","sig":null,"attributes":[{"value":"/ The alignment of pointer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12932562,"byte_end":12932591,"line_start":151,"line_end":151,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":129},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12932661,"byte_end":12932665,"line_start":155,"line_end":155,"column_start":10,"column_end":14},"name":"Init","qualname":"::atomic::Pointable::Init","value":"type Init;","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" The type for initializers.\n","sig":null,"attributes":[{"value":"/ The type for initializers.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12932621,"byte_end":12932651,"line_start":154,"line_end":154,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12932817,"byte_end":12932821,"line_start":162,"line_end":162,"column_start":15,"column_end":19},"name":"init","qualname":"::atomic::Pointable::init","value":"pub unsafe fn init(Self::Init) -> usize","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" Initializes a with the given initializer.","sig":null,"attributes":[{"value":"/ Initializes a with the given initializer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12932672,"byte_end":12932717,"line_start":157,"line_end":157,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12932722,"byte_end":12932725,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12932730,"byte_end":12932742,"line_start":159,"line_end":159,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12932747,"byte_end":12932750,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ The result should be a multiple of `ALIGN`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12932755,"byte_end":12932802,"line_start":161,"line_end":161,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12933185,"byte_end":12933190,"line_start":171,"line_end":171,"column_start":15,"column_end":20},"name":"deref","qualname":"::atomic::Pointable::deref","value":"pub unsafe fn deref<'a>(usize) -> &'a Self","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" Dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Dereferences the given pointer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12932855,"byte_end":12932890,"line_start":164,"line_end":164,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12932895,"byte_end":12932898,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12932903,"byte_end":12932915,"line_start":166,"line_end":166,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12932920,"byte_end":12932923,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12932928,"byte_end":12933004,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12933009,"byte_end":12933077,"line_start":169,"line_end":169,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be mutably dereferenced by [`Pointable::deref_mut`] concurrently.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12933082,"byte_end":12933170,"line_start":170,"line_end":170,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12933589,"byte_end":12933598,"line_start":181,"line_end":181,"column_start":15,"column_end":24},"name":"deref_mut","qualname":"::atomic::Pointable::deref_mut","value":"pub unsafe fn deref_mut<'a>(usize) -> &'a mut Self","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" Mutably dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Mutably dereferences the given pointer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12933225,"byte_end":12933268,"line_start":173,"line_end":173,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12933273,"byte_end":12933276,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12933281,"byte_end":12933293,"line_start":175,"line_end":175,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12933298,"byte_end":12933301,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12933306,"byte_end":12933382,"line_start":177,"line_end":177,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12933387,"byte_end":12933455,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12933460,"byte_end":12933550,"line_start":179,"line_end":179,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12933555,"byte_end":12933574,"line_start":180,"line_end":180,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12934011,"byte_end":12934015,"line_start":191,"line_end":191,"column_start":15,"column_end":19},"name":"drop","qualname":"::atomic::Pointable::drop","value":"pub unsafe fn drop(usize)","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" Drops the object pointed to by the given pointer.","sig":null,"attributes":[{"value":"/ Drops the object pointed to by the given pointer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12933637,"byte_end":12933690,"line_start":183,"line_end":183,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12933695,"byte_end":12933698,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12933703,"byte_end":12933715,"line_start":185,"line_end":185,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12933720,"byte_end":12933723,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12933728,"byte_end":12933804,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12933809,"byte_end":12933877,"line_start":188,"line_end":188,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12933882,"byte_end":12933972,"line_start":189,"line_end":189,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12933977,"byte_end":12933996,"line_start":190,"line_end":190,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12937126,"byte_end":12937132,"line_start":291,"line_end":291,"column_start":12,"column_end":18},"name":"Atomic","qualname":"::atomic::Atomic","value":"Atomic {  }","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164}],"decl_id":null,"docs":" An atomic pointer that can be safely shared between threads.","sig":null,"attributes":[{"value":"/ An atomic pointer that can be safely shared between threads.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12936608,"byte_end":12936672,"line_start":282,"line_end":282,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12936673,"byte_end":12936676,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12936677,"byte_end":12936775,"line_start":284,"line_end":284,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address. For example, the tag for a pointer to a sized type `T`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12936776,"byte_end":12936873,"line_start":285,"line_end":285,"column_start":1,"column_end":98}},{"value":"/ should be less than `(1 << mem::align_of::<T>().trailing_zeros())`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12936874,"byte_end":12936945,"line_start":286,"line_end":286,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12936946,"byte_end":12936949,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ Any method that loads the pointer must be passed a reference to a [`Guard`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12936950,"byte_end":12937030,"line_start":288,"line_end":288,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12937031,"byte_end":12937034,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ Crossbeam supports dynamically sized types.  See [`Pointable`] for details.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12937035,"byte_end":12937114,"line_start":290,"line_end":290,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12937675,"byte_end":12937678,"line_start":310,"line_end":310,"column_start":12,"column_end":15},"name":"new","qualname":"<Atomic<T>>::new","value":"pub fn new(T) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12937385,"byte_end":12937467,"line_start":300,"line_end":300,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12937472,"byte_end":12937475,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12937480,"byte_end":12937494,"line_start":302,"line_end":302,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12937499,"byte_end":12937502,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12937507,"byte_end":12937514,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12937519,"byte_end":12937551,"line_start":305,"line_end":305,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12937556,"byte_end":12937559,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12937564,"byte_end":12937594,"line_start":307,"line_end":307,"column_start":5,"column_end":35}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12937599,"byte_end":12937651,"line_start":308,"line_end":308,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12937656,"byte_end":12937663,"line_start":309,"line_end":309,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12938079,"byte_end":12938083,"line_start":326,"line_end":326,"column_start":12,"column_end":16},"name":"init","qualname":"<Atomic<T>>::init","value":"pub fn init(T::Init) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12937781,"byte_end":12937863,"line_start":316,"line_end":316,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12937868,"byte_end":12937871,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12937876,"byte_end":12937890,"line_start":318,"line_end":318,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12937895,"byte_end":12937898,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12937903,"byte_end":12937910,"line_start":320,"line_end":320,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12937915,"byte_end":12937947,"line_start":321,"line_end":321,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12937952,"byte_end":12937955,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::init(1234);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12937960,"byte_end":12937998,"line_start":323,"line_end":323,"column_start":5,"column_end":43}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12938003,"byte_end":12938055,"line_start":324,"line_end":324,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12938060,"byte_end":12938067,"line_start":325,"line_end":325,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12938927,"byte_end":12938931,"line_start":357,"line_end":357,"column_start":12,"column_end":16},"name":"null","qualname":"<Atomic<T>>::null","value":"pub fn null() -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null atomic pointer.\n","sig":null,"attributes":[{"value":"/ Returns a new null atomic pointer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12938795,"byte_end":12938833,"line_start":355,"line_end":355,"column_start":5,"column_end":43}},{"value":"cfg(not(all(not(crossbeam_no_const_fn_trait_bound), not(crossbeam_loom))))","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12938838,"byte_end":12938915,"line_start":356,"line_end":356,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12939573,"byte_end":12939577,"line_start":380,"line_end":380,"column_start":12,"column_end":16},"name":"load","qualname":"<Atomic<T>>::load","value":"pub fn load<'g>(&Self, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12939058,"byte_end":12939103,"line_start":364,"line_end":364,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12939108,"byte_end":12939111,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12939116,"byte_end":12939206,"line_start":366,"line_end":366,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12939211,"byte_end":12939225,"line_start":367,"line_end":367,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12939230,"byte_end":12939233,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12939238,"byte_end":12939252,"line_start":369,"line_end":369,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12939257,"byte_end":12939260,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12939265,"byte_end":12939272,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12939277,"byte_end":12939326,"line_start":372,"line_end":372,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12939331,"byte_end":12939375,"line_start":373,"line_end":373,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12939380,"byte_end":12939383,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12939388,"byte_end":12939418,"line_start":375,"line_end":375,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12939423,"byte_end":12939453,"line_start":376,"line_end":376,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12939458,"byte_end":12939492,"line_start":377,"line_end":377,"column_start":5,"column_end":39}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12939497,"byte_end":12939549,"line_start":378,"line_end":378,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12939554,"byte_end":12939561,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12940641,"byte_end":12940653,"line_start":406,"line_end":406,"column_start":12,"column_end":24},"name":"load_consume","qualname":"<Atomic<T>>::load_consume","value":"pub fn load_consume<'g>(&Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12939707,"byte_end":12939786,"line_start":384,"line_end":384,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12939791,"byte_end":12939794,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ This is similar to the \"acquire\" ordering, except that an ordering is","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12939799,"byte_end":12939872,"line_start":386,"line_end":386,"column_start":5,"column_end":78}},{"value":"/ only guaranteed with operations that \"depend on\" the result of the load.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12939877,"byte_end":12939953,"line_start":387,"line_end":387,"column_start":5,"column_end":81}},{"value":"/ However consume loads are usually much faster than acquire loads on","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12939958,"byte_end":12940029,"line_start":388,"line_end":388,"column_start":5,"column_end":76}},{"value":"/ architectures with a weak memory model since they don't require memory","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12940034,"byte_end":12940108,"line_start":389,"line_end":389,"column_start":5,"column_end":79}},{"value":"/ fence instructions.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12940113,"byte_end":12940136,"line_start":390,"line_end":390,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12940141,"byte_end":12940144,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ The exact definition of \"depend on\" is a bit vague, but it works as you","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12940149,"byte_end":12940224,"line_start":392,"line_end":392,"column_start":5,"column_end":80}},{"value":"/ would expect in practice since a lot of software, especially the Linux","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12940229,"byte_end":12940303,"line_start":393,"line_end":393,"column_start":5,"column_end":79}},{"value":"/ kernel, rely on this behavior.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12940308,"byte_end":12940342,"line_start":394,"line_end":394,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12940347,"byte_end":12940350,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12940355,"byte_end":12940369,"line_start":396,"line_end":396,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12940374,"byte_end":12940377,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12940382,"byte_end":12940389,"line_start":398,"line_end":398,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12940394,"byte_end":12940443,"line_start":399,"line_end":399,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12940448,"byte_end":12940451,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12940456,"byte_end":12940486,"line_start":401,"line_end":401,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12940491,"byte_end":12940521,"line_start":402,"line_end":402,"column_start":5,"column_end":35}},{"value":"/ let p = a.load_consume(guard);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12940526,"byte_end":12940560,"line_start":403,"line_end":403,"column_start":5,"column_end":39}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12940565,"byte_end":12940617,"line_start":404,"line_end":404,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12940622,"byte_end":12940629,"line_start":405,"line_end":405,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12941413,"byte_end":12941418,"line_start":427,"line_end":427,"column_start":12,"column_end":17},"name":"store","qualname":"<Atomic<T>>::store","value":"pub fn store<P: Pointer<T>>(&Self, P, Ordering)","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12940773,"byte_end":12940838,"line_start":410,"line_end":410,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12940843,"byte_end":12940846,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12940851,"byte_end":12940941,"line_start":412,"line_end":412,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12940946,"byte_end":12940960,"line_start":413,"line_end":413,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12940965,"byte_end":12940968,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12940973,"byte_end":12940987,"line_start":415,"line_end":415,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12940992,"byte_end":12940995,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12941000,"byte_end":12941007,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{Atomic, Owned, Shared};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12941012,"byte_end":12941061,"line_start":418,"line_end":418,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12941066,"byte_end":12941110,"line_start":419,"line_end":419,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12941115,"byte_end":12941118,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12941123,"byte_end":12941153,"line_start":421,"line_end":421,"column_start":5,"column_end":35}},{"value":"/ # unsafe { drop(a.load(SeqCst, &crossbeam_epoch::pin()).into_owned()); } // avoid leak","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12941158,"byte_end":12941248,"line_start":422,"line_end":422,"column_start":5,"column_end":95}},{"value":"/ a.store(Shared::null(), SeqCst);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12941253,"byte_end":12941289,"line_start":423,"line_end":423,"column_start":5,"column_end":41}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12941294,"byte_end":12941332,"line_start":424,"line_end":424,"column_start":5,"column_end":43}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12941337,"byte_end":12941389,"line_start":425,"line_end":425,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12941394,"byte_end":12941401,"line_start":426,"line_end":426,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12942125,"byte_end":12942129,"line_start":448,"line_end":448,"column_start":12,"column_end":16},"name":"swap","qualname":"<Atomic<T>>::swap","value":"pub fn swap<'g, P: Pointer<T>>(&Self, P, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous\n `Shared`.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12941525,"byte_end":12941613,"line_start":431,"line_end":431,"column_start":5,"column_end":93}},{"value":"/ `Shared`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12941618,"byte_end":12941631,"line_start":432,"line_end":432,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12941636,"byte_end":12941639,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12941644,"byte_end":12941734,"line_start":434,"line_end":434,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12941739,"byte_end":12941753,"line_start":435,"line_end":435,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12941758,"byte_end":12941761,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12941766,"byte_end":12941780,"line_start":437,"line_end":437,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12941785,"byte_end":12941788,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12941793,"byte_end":12941800,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12941805,"byte_end":12941862,"line_start":440,"line_end":440,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12941867,"byte_end":12941911,"line_start":441,"line_end":441,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12941916,"byte_end":12941919,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12941924,"byte_end":12941954,"line_start":443,"line_end":443,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12941959,"byte_end":12941989,"line_start":444,"line_end":444,"column_start":5,"column_end":35}},{"value":"/ let p = a.swap(Shared::null(), SeqCst, guard);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12941994,"byte_end":12942044,"line_start":445,"line_end":445,"column_start":5,"column_end":55}},{"value":"/ # unsafe { drop(p.into_owned()); } // avoid leak","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12942049,"byte_end":12942101,"line_start":446,"line_end":446,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12942106,"byte_end":12942113,"line_start":447,"line_end":447,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12944025,"byte_end":12944041,"line_start":483,"line_end":483,"column_start":12,"column_end":28},"name":"compare_exchange","qualname":"<Atomic<T>>::compare_exchange","value":"pub fn compare_exchange<'g,\nP>(&Self, Shared<, T>, P, Ordering, Ordering, &'g Guard)\n-> Result<Shared, CompareExchangeError> where P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12942300,"byte_end":12942396,"line_start":452,"line_end":452,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12942401,"byte_end":12942495,"line_start":453,"line_end":453,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12942500,"byte_end":12942571,"line_start":454,"line_end":454,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12942576,"byte_end":12942579,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12942584,"byte_end":12942679,"line_start":456,"line_end":456,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12942684,"byte_end":12942775,"line_start":457,"line_end":457,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12942780,"byte_end":12942793,"line_start":458,"line_end":458,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12942798,"byte_end":12942801,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ This method takes two `Ordering` arguments to describe the memory","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12942806,"byte_end":12942875,"line_start":460,"line_end":460,"column_start":5,"column_end":74}},{"value":"/ ordering of this operation. `success` describes the required ordering for the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12942880,"byte_end":12942961,"line_start":461,"line_end":461,"column_start":5,"column_end":86}},{"value":"/ read-modify-write operation that takes place if the comparison with `current` succeeds.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12942966,"byte_end":12943057,"line_start":462,"line_end":462,"column_start":5,"column_end":96}},{"value":"/ `failure` describes the required ordering for the load operation that takes place when","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12943062,"byte_end":12943152,"line_start":463,"line_end":463,"column_start":5,"column_end":95}},{"value":"/ the comparison fails. Using `Acquire` as success ordering makes the store part","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12943157,"byte_end":12943239,"line_start":464,"line_end":464,"column_start":5,"column_end":87}},{"value":"/ of this operation `Relaxed`, and using `Release` makes the successful load","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12943244,"byte_end":12943322,"line_start":465,"line_end":465,"column_start":5,"column_end":83}},{"value":"/ `Relaxed`. The failure ordering can only be `SeqCst`, `Acquire` or `Relaxed`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12943327,"byte_end":12943407,"line_start":466,"line_end":466,"column_start":5,"column_end":85}},{"value":"/ and must be equivalent to or weaker than the success ordering.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12943412,"byte_end":12943478,"line_start":467,"line_end":467,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12943483,"byte_end":12943486,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12943491,"byte_end":12943505,"line_start":469,"line_end":469,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12943510,"byte_end":12943513,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12943518,"byte_end":12943525,"line_start":471,"line_end":471,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12943530,"byte_end":12943594,"line_start":472,"line_end":472,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12943599,"byte_end":12943643,"line_start":473,"line_end":473,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12943648,"byte_end":12943651,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12943656,"byte_end":12943686,"line_start":475,"line_end":475,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12943691,"byte_end":12943694,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12943699,"byte_end":12943729,"line_start":477,"line_end":477,"column_start":5,"column_end":35}},{"value":"/ let curr = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12943734,"byte_end":12943771,"line_start":478,"line_end":478,"column_start":5,"column_end":42}},{"value":"/ let res1 = a.compare_exchange(curr, Shared::null(), SeqCst, SeqCst, guard);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12943776,"byte_end":12943855,"line_start":479,"line_end":479,"column_start":5,"column_end":84}},{"value":"/ let res2 = a.compare_exchange(curr, Owned::new(5678), SeqCst, SeqCst, guard);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12943860,"byte_end":12943941,"line_start":480,"line_end":480,"column_start":5,"column_end":86}},{"value":"/ # unsafe { drop(curr.into_owned()); } // avoid leak","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12943946,"byte_end":12944001,"line_start":481,"line_end":481,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12944006,"byte_end":12944013,"line_start":482,"line_end":482,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12947212,"byte_end":12947233,"line_start":560,"line_end":560,"column_start":12,"column_end":33},"name":"compare_exchange_weak","qualname":"<Atomic<T>>::compare_exchange_weak","value":"pub fn compare_exchange_weak<'g,\nP>(&Self, Shared<, T>, P, Ordering, Ordering, &'g Guard)\n-> Result<Shared, CompareExchangeError> where P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12944703,"byte_end":12944799,"line_start":506,"line_end":506,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12944804,"byte_end":12944898,"line_start":507,"line_end":507,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12944903,"byte_end":12944974,"line_start":508,"line_end":508,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12944979,"byte_end":12944982,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_exchange`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12944987,"byte_end":12945082,"line_start":510,"line_end":510,"column_start":5,"column_end":100}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12945087,"byte_end":12945182,"line_start":511,"line_end":511,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12945187,"byte_end":12945277,"line_start":512,"line_end":512,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12945282,"byte_end":12945366,"line_start":513,"line_end":513,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12945371,"byte_end":12945374,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ This method takes two `Ordering` arguments to describe the memory","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12945379,"byte_end":12945448,"line_start":515,"line_end":515,"column_start":5,"column_end":74}},{"value":"/ ordering of this operation. `success` describes the required ordering for the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12945453,"byte_end":12945534,"line_start":516,"line_end":516,"column_start":5,"column_end":86}},{"value":"/ read-modify-write operation that takes place if the comparison with `current` succeeds.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12945539,"byte_end":12945630,"line_start":517,"line_end":517,"column_start":5,"column_end":96}},{"value":"/ `failure` describes the required ordering for the load operation that takes place when","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12945635,"byte_end":12945725,"line_start":518,"line_end":518,"column_start":5,"column_end":95}},{"value":"/ the comparison fails. Using `Acquire` as success ordering makes the store part","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12945730,"byte_end":12945812,"line_start":519,"line_end":519,"column_start":5,"column_end":87}},{"value":"/ of this operation `Relaxed`, and using `Release` makes the successful load","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12945817,"byte_end":12945895,"line_start":520,"line_end":520,"column_start":5,"column_end":83}},{"value":"/ `Relaxed`. The failure ordering can only be `SeqCst`, `Acquire` or `Relaxed`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12945900,"byte_end":12945980,"line_start":521,"line_end":521,"column_start":5,"column_end":85}},{"value":"/ and must be equivalent to or weaker than the success ordering.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12945985,"byte_end":12946051,"line_start":522,"line_end":522,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12946056,"byte_end":12946059,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ [`compare_exchange`]: Atomic::compare_exchange","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12946064,"byte_end":12946114,"line_start":524,"line_end":524,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12946119,"byte_end":12946122,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12946127,"byte_end":12946141,"line_start":526,"line_end":526,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12946146,"byte_end":12946149,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12946154,"byte_end":12946161,"line_start":528,"line_end":528,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12946166,"byte_end":12946230,"line_start":529,"line_end":529,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12946235,"byte_end":12946279,"line_start":530,"line_end":530,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12946284,"byte_end":12946287,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12946292,"byte_end":12946322,"line_start":532,"line_end":532,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12946327,"byte_end":12946357,"line_start":533,"line_end":533,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12946362,"byte_end":12946365,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12946370,"byte_end":12946405,"line_start":535,"line_end":535,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12946410,"byte_end":12946450,"line_start":536,"line_end":536,"column_start":5,"column_end":45}},{"value":"/ # unsafe { drop(a.load(SeqCst, guard).into_owned()); } // avoid leak","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12946455,"byte_end":12946527,"line_start":537,"line_end":537,"column_start":5,"column_end":77}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12946532,"byte_end":12946542,"line_start":538,"line_end":538,"column_start":5,"column_end":15}},{"value":"/     match a.compare_exchange_weak(ptr, new, SeqCst, SeqCst, guard) {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12946547,"byte_end":12946619,"line_start":539,"line_end":539,"column_start":5,"column_end":77}},{"value":"/         Ok(p) => {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12946624,"byte_end":12946646,"line_start":540,"line_end":540,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12946651,"byte_end":12946675,"line_start":541,"line_end":541,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12946680,"byte_end":12946702,"line_start":542,"line_end":542,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12946707,"byte_end":12946720,"line_start":543,"line_end":543,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12946725,"byte_end":12946750,"line_start":544,"line_end":544,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12946755,"byte_end":12946789,"line_start":545,"line_end":545,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12946794,"byte_end":12946824,"line_start":546,"line_end":546,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12946829,"byte_end":12946842,"line_start":547,"line_end":547,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12946847,"byte_end":12946856,"line_start":548,"line_end":548,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12946861,"byte_end":12946866,"line_start":549,"line_end":549,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12946871,"byte_end":12946874,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12946879,"byte_end":12946920,"line_start":551,"line_end":551,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12946925,"byte_end":12946935,"line_start":552,"line_end":552,"column_start":5,"column_end":15}},{"value":"/     match a.compare_exchange_weak(curr, Shared::null(), SeqCst, SeqCst, guard) {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12946940,"byte_end":12947024,"line_start":553,"line_end":553,"column_start":5,"column_end":89}},{"value":"/         Ok(_) => break,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12947029,"byte_end":12947056,"line_start":554,"line_end":554,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12947061,"byte_end":12947104,"line_start":555,"line_end":555,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12947109,"byte_end":12947118,"line_start":556,"line_end":556,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12947123,"byte_end":12947128,"line_start":557,"line_end":557,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(curr.into_owned()); } // avoid leak","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12947133,"byte_end":12947188,"line_start":558,"line_end":558,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12947193,"byte_end":12947200,"line_start":559,"line_end":559,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12949787,"byte_end":12949799,"line_start":623,"line_end":623,"column_start":12,"column_end":24},"name":"fetch_update","qualname":"<Atomic<T>>::fetch_update","value":"pub fn fetch_update<'g, F>(&Self, Ordering, Ordering, &'g Guard, F)\n-> Result<Shared, Shared> where F: FnMut(Shared) -> Option<Shared>","parent":null,"children":[],"decl_id":null,"docs":" Fetches the pointer, and then applies a function to it that returns a new value.\n Returns a `Result` of `Ok(previous_value)` if the function returned `Some`, else `Err(_)`.","sig":null,"attributes":[{"value":"/ Fetches the pointer, and then applies a function to it that returns a new value.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12947900,"byte_end":12947984,"line_start":583,"line_end":583,"column_start":5,"column_end":89}},{"value":"/ Returns a `Result` of `Ok(previous_value)` if the function returned `Some`, else `Err(_)`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12947989,"byte_end":12948083,"line_start":584,"line_end":584,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12948088,"byte_end":12948091,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ Note that the given function may be called multiple times if the value has been changed by","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12948096,"byte_end":12948190,"line_start":586,"line_end":586,"column_start":5,"column_end":99}},{"value":"/ other threads in the meantime, as long as the function returns `Some(_)`, but the function","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12948195,"byte_end":12948289,"line_start":587,"line_end":587,"column_start":5,"column_end":99}},{"value":"/ will have been applied only once to the stored value.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12948294,"byte_end":12948351,"line_start":588,"line_end":588,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12948356,"byte_end":12948359,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ `fetch_update` takes two [`Ordering`] arguments to describe the memory","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12948364,"byte_end":12948438,"line_start":590,"line_end":590,"column_start":5,"column_end":79}},{"value":"/ ordering of this operation. The first describes the required ordering for","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12948443,"byte_end":12948520,"line_start":591,"line_end":591,"column_start":5,"column_end":82}},{"value":"/ when the operation finally succeeds while the second describes the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12948525,"byte_end":12948595,"line_start":592,"line_end":592,"column_start":5,"column_end":75}},{"value":"/ required ordering for loads. These correspond to the success and failure","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12948600,"byte_end":12948676,"line_start":593,"line_end":593,"column_start":5,"column_end":81}},{"value":"/ orderings of [`Atomic::compare_exchange`] respectively.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12948681,"byte_end":12948740,"line_start":594,"line_end":594,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12948745,"byte_end":12948748,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ Using [`Acquire`] as success ordering makes the store part of this","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12948753,"byte_end":12948823,"line_start":596,"line_end":596,"column_start":5,"column_end":75}},{"value":"/ operation [`Relaxed`], and using [`Release`] makes the final successful","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12948828,"byte_end":12948903,"line_start":597,"line_end":597,"column_start":5,"column_end":80}},{"value":"/ load [`Relaxed`]. The (failed) load ordering can only be [`SeqCst`],","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12948908,"byte_end":12948980,"line_start":598,"line_end":598,"column_start":5,"column_end":77}},{"value":"/ [`Acquire`] or [`Relaxed`] and must be equivalent to or weaker than the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12948985,"byte_end":12949060,"line_start":599,"line_end":599,"column_start":5,"column_end":80}},{"value":"/ success ordering.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12949065,"byte_end":12949086,"line_start":600,"line_end":600,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12949091,"byte_end":12949094,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ [`Relaxed`]: Ordering::Relaxed","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12949099,"byte_end":12949133,"line_start":602,"line_end":602,"column_start":5,"column_end":39}},{"value":"/ [`Acquire`]: Ordering::Acquire","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12949138,"byte_end":12949172,"line_start":603,"line_end":603,"column_start":5,"column_end":39}},{"value":"/ [`Release`]: Ordering::Release","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12949177,"byte_end":12949211,"line_start":604,"line_end":604,"column_start":5,"column_end":39}},{"value":"/ [`SeqCst`]: Ordering::SeqCst","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12949216,"byte_end":12949248,"line_start":605,"line_end":605,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12949253,"byte_end":12949256,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12949261,"byte_end":12949275,"line_start":607,"line_end":607,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12949280,"byte_end":12949283,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12949288,"byte_end":12949295,"line_start":609,"line_end":609,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12949300,"byte_end":12949349,"line_start":610,"line_end":610,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12949354,"byte_end":12949398,"line_start":611,"line_end":611,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12949403,"byte_end":12949406,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12949411,"byte_end":12949441,"line_start":613,"line_end":613,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12949446,"byte_end":12949476,"line_start":614,"line_end":614,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12949481,"byte_end":12949484,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ let res1 = a.fetch_update(SeqCst, SeqCst, guard, |x| Some(x.with_tag(1)));","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12949489,"byte_end":12949567,"line_start":616,"line_end":616,"column_start":5,"column_end":83}},{"value":"/ assert!(res1.is_ok());","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12949572,"byte_end":12949598,"line_start":617,"line_end":617,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12949603,"byte_end":12949606,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ let res2 = a.fetch_update(SeqCst, SeqCst, guard, |x| None);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12949611,"byte_end":12949674,"line_start":619,"line_end":619,"column_start":5,"column_end":68}},{"value":"/ assert!(res2.is_err());","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12949679,"byte_end":12949706,"line_start":620,"line_end":620,"column_start":5,"column_end":32}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12949711,"byte_end":12949763,"line_start":621,"line_end":621,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12949768,"byte_end":12949775,"line_start":622,"line_end":622,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12952159,"byte_end":12952174,"line_start":685,"line_end":685,"column_start":12,"column_end":27},"name":"compare_and_set","qualname":"<Atomic<T>>::compare_and_set","value":"pub fn compare_and_set<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12950397,"byte_end":12950493,"line_start":643,"line_end":643,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12950498,"byte_end":12950592,"line_start":644,"line_end":644,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12950597,"byte_end":12950668,"line_start":645,"line_end":645,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12950673,"byte_end":12950676,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12950681,"byte_end":12950776,"line_start":647,"line_end":647,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12950781,"byte_end":12950872,"line_start":648,"line_end":648,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12950877,"byte_end":12950890,"line_start":649,"line_end":649,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12950895,"byte_end":12950898,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12950903,"byte_end":12950988,"line_start":651,"line_end":651,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12950993,"byte_end":12951024,"line_start":652,"line_end":652,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12951029,"byte_end":12951032,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ # Migrating to `compare_exchange`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12951037,"byte_end":12951074,"line_start":654,"line_end":654,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12951079,"byte_end":12951082,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ `compare_and_set` is equivalent to `compare_exchange` with the following mapping for","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12951087,"byte_end":12951175,"line_start":656,"line_end":656,"column_start":5,"column_end":93}},{"value":"/ memory orderings:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12951180,"byte_end":12951201,"line_start":657,"line_end":657,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12951206,"byte_end":12951209,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ Original | Success | Failure","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12951214,"byte_end":12951246,"line_start":659,"line_end":659,"column_start":5,"column_end":37}},{"value":"/ -------- | ------- | -------","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12951251,"byte_end":12951283,"line_start":660,"line_end":660,"column_start":5,"column_end":37}},{"value":"/ Relaxed  | Relaxed | Relaxed","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12951288,"byte_end":12951320,"line_start":661,"line_end":661,"column_start":5,"column_end":37}},{"value":"/ Acquire  | Acquire | Acquire","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12951325,"byte_end":12951357,"line_start":662,"line_end":662,"column_start":5,"column_end":37}},{"value":"/ Release  | Release | Relaxed","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12951362,"byte_end":12951394,"line_start":663,"line_end":663,"column_start":5,"column_end":37}},{"value":"/ AcqRel   | AcqRel  | Acquire","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12951399,"byte_end":12951431,"line_start":664,"line_end":664,"column_start":5,"column_end":37}},{"value":"/ SeqCst   | SeqCst  | SeqCst","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12951436,"byte_end":12951467,"line_start":665,"line_end":665,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12951472,"byte_end":12951475,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12951480,"byte_end":12951494,"line_start":667,"line_end":667,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12951499,"byte_end":12951502,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12951507,"byte_end":12951514,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12951519,"byte_end":12951546,"line_start":670,"line_end":670,"column_start":5,"column_end":32}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12951551,"byte_end":12951615,"line_start":671,"line_end":671,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12951620,"byte_end":12951664,"line_start":672,"line_end":672,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12951669,"byte_end":12951672,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12951677,"byte_end":12951707,"line_start":674,"line_end":674,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12951712,"byte_end":12951715,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12951720,"byte_end":12951750,"line_start":676,"line_end":676,"column_start":5,"column_end":35}},{"value":"/ let curr = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12951755,"byte_end":12951792,"line_start":677,"line_end":677,"column_start":5,"column_end":42}},{"value":"/ let res1 = a.compare_and_set(curr, Shared::null(), SeqCst, guard);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12951797,"byte_end":12951867,"line_start":678,"line_end":678,"column_start":5,"column_end":75}},{"value":"/ let res2 = a.compare_and_set(curr, Owned::new(5678), SeqCst, guard);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12951872,"byte_end":12951944,"line_start":679,"line_end":679,"column_start":5,"column_end":77}},{"value":"/ # unsafe { drop(curr.into_owned()); } // avoid leak","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12951949,"byte_end":12952004,"line_start":680,"line_end":680,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12952009,"byte_end":12952016,"line_start":681,"line_end":681,"column_start":5,"column_end":12}},{"value":"allow(deprecated)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12952068,"byte_end":12952088,"line_start":683,"line_end":683,"column_start":5,"column_end":25}},{"value":"deprecated(note = \"Use `compare_exchange` instead\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12952093,"byte_end":12952147,"line_start":684,"line_end":684,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12955080,"byte_end":12955100,"line_start":764,"line_end":764,"column_start":12,"column_end":32},"name":"compare_and_set_weak","qualname":"<Atomic<T>>::compare_and_set_weak","value":"pub fn compare_and_set_weak<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12952517,"byte_end":12952613,"line_start":699,"line_end":699,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12952618,"byte_end":12952712,"line_start":700,"line_end":700,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12952717,"byte_end":12952788,"line_start":701,"line_end":701,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12952793,"byte_end":12952796,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_and_set`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12952801,"byte_end":12952895,"line_start":703,"line_end":703,"column_start":5,"column_end":99}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12952900,"byte_end":12952995,"line_start":704,"line_end":704,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12953000,"byte_end":12953090,"line_start":705,"line_end":705,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12953095,"byte_end":12953179,"line_start":706,"line_end":706,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12953184,"byte_end":12953187,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12953192,"byte_end":12953277,"line_start":708,"line_end":708,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12953282,"byte_end":12953313,"line_start":709,"line_end":709,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12953318,"byte_end":12953321,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ [`compare_and_set`]: Atomic::compare_and_set","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12953326,"byte_end":12953374,"line_start":711,"line_end":711,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12953379,"byte_end":12953382,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ # Migrating to `compare_exchange_weak`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12953387,"byte_end":12953429,"line_start":713,"line_end":713,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12953434,"byte_end":12953437,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ `compare_and_set_weak` is equivalent to `compare_exchange_weak` with the following mapping for","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12953442,"byte_end":12953540,"line_start":715,"line_end":715,"column_start":5,"column_end":103}},{"value":"/ memory orderings:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12953545,"byte_end":12953566,"line_start":716,"line_end":716,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12953571,"byte_end":12953574,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ Original | Success | Failure","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12953579,"byte_end":12953611,"line_start":718,"line_end":718,"column_start":5,"column_end":37}},{"value":"/ -------- | ------- | -------","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12953616,"byte_end":12953648,"line_start":719,"line_end":719,"column_start":5,"column_end":37}},{"value":"/ Relaxed  | Relaxed | Relaxed","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12953653,"byte_end":12953685,"line_start":720,"line_end":720,"column_start":5,"column_end":37}},{"value":"/ Acquire  | Acquire | Acquire","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12953690,"byte_end":12953722,"line_start":721,"line_end":721,"column_start":5,"column_end":37}},{"value":"/ Release  | Release | Relaxed","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12953727,"byte_end":12953759,"line_start":722,"line_end":722,"column_start":5,"column_end":37}},{"value":"/ AcqRel   | AcqRel  | Acquire","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12953764,"byte_end":12953796,"line_start":723,"line_end":723,"column_start":5,"column_end":37}},{"value":"/ SeqCst   | SeqCst  | SeqCst","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12953801,"byte_end":12953832,"line_start":724,"line_end":724,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12953837,"byte_end":12953840,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12953845,"byte_end":12953859,"line_start":726,"line_end":726,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12953864,"byte_end":12953867,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12953872,"byte_end":12953879,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12953884,"byte_end":12953911,"line_start":729,"line_end":729,"column_start":5,"column_end":32}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12953916,"byte_end":12953980,"line_start":730,"line_end":730,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12953985,"byte_end":12954029,"line_start":731,"line_end":731,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12954034,"byte_end":12954037,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12954042,"byte_end":12954072,"line_start":733,"line_end":733,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12954077,"byte_end":12954107,"line_start":734,"line_end":734,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12954112,"byte_end":12954115,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12954120,"byte_end":12954155,"line_start":736,"line_end":736,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12954160,"byte_end":12954200,"line_start":737,"line_end":737,"column_start":5,"column_end":45}},{"value":"/ # unsafe { drop(a.load(SeqCst, guard).into_owned()); } // avoid leak","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12954205,"byte_end":12954277,"line_start":738,"line_end":738,"column_start":5,"column_end":77}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12954282,"byte_end":12954292,"line_start":739,"line_end":739,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(ptr, new, SeqCst, guard) {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12954297,"byte_end":12954360,"line_start":740,"line_end":740,"column_start":5,"column_end":68}},{"value":"/         Ok(p) => {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12954365,"byte_end":12954387,"line_start":741,"line_end":741,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12954392,"byte_end":12954416,"line_start":742,"line_end":742,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12954421,"byte_end":12954443,"line_start":743,"line_end":743,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12954448,"byte_end":12954461,"line_start":744,"line_end":744,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12954466,"byte_end":12954491,"line_start":745,"line_end":745,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12954496,"byte_end":12954530,"line_start":746,"line_end":746,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12954535,"byte_end":12954565,"line_start":747,"line_end":747,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12954570,"byte_end":12954583,"line_start":748,"line_end":748,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12954588,"byte_end":12954597,"line_start":749,"line_end":749,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12954602,"byte_end":12954607,"line_start":750,"line_end":750,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12954612,"byte_end":12954615,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12954620,"byte_end":12954661,"line_start":752,"line_end":752,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12954666,"byte_end":12954676,"line_start":753,"line_end":753,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(curr, Shared::null(), SeqCst, guard) {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12954681,"byte_end":12954756,"line_start":754,"line_end":754,"column_start":5,"column_end":80}},{"value":"/         Ok(_) => break,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12954761,"byte_end":12954788,"line_start":755,"line_end":755,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12954793,"byte_end":12954836,"line_start":756,"line_end":756,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12954841,"byte_end":12954850,"line_start":757,"line_end":757,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12954855,"byte_end":12954860,"line_start":758,"line_end":758,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(curr.into_owned()); } // avoid leak","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12954865,"byte_end":12954920,"line_start":759,"line_end":759,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12954925,"byte_end":12954932,"line_start":760,"line_end":760,"column_start":5,"column_end":12}},{"value":"allow(deprecated)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12954984,"byte_end":12955004,"line_start":762,"line_end":762,"column_start":5,"column_end":25}},{"value":"deprecated(note = \"Use `compare_exchange_weak` instead\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12955009,"byte_end":12955068,"line_start":763,"line_end":763,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12956179,"byte_end":12956188,"line_start":797,"line_end":797,"column_start":12,"column_end":21},"name":"fetch_and","qualname":"<Atomic<T>>::fetch_and","value":"pub fn fetch_and<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"and\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"and\" with the current tag.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12955448,"byte_end":12955487,"line_start":778,"line_end":778,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12955492,"byte_end":12955495,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"and\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12955500,"byte_end":12955594,"line_start":780,"line_end":780,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12955599,"byte_end":12955655,"line_start":781,"line_end":781,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12955660,"byte_end":12955663,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12955668,"byte_end":12955758,"line_start":783,"line_end":783,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12955763,"byte_end":12955777,"line_start":784,"line_end":784,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12955782,"byte_end":12955785,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12955790,"byte_end":12955804,"line_start":786,"line_end":786,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12955809,"byte_end":12955812,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12955817,"byte_end":12955824,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12955829,"byte_end":12955886,"line_start":789,"line_end":789,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12955891,"byte_end":12955935,"line_start":790,"line_end":790,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12955940,"byte_end":12955943,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(3));","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12955948,"byte_end":12956008,"line_start":792,"line_end":792,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12956013,"byte_end":12956043,"line_start":793,"line_end":793,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_and(2, SeqCst, guard).tag(), 3);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12956048,"byte_end":12956103,"line_start":794,"line_end":794,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12956108,"byte_end":12956155,"line_start":795,"line_end":795,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12956160,"byte_end":12956167,"line_start":796,"line_end":796,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12957087,"byte_end":12957095,"line_start":820,"line_end":820,"column_start":12,"column_end":20},"name":"fetch_or","qualname":"<Atomic<T>>::fetch_or","value":"pub fn fetch_or<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"or\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"or\" with the current tag.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12956359,"byte_end":12956397,"line_start":801,"line_end":801,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12956402,"byte_end":12956405,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"or\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12956410,"byte_end":12956503,"line_start":803,"line_end":803,"column_start":5,"column_end":98}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12956508,"byte_end":12956564,"line_start":804,"line_end":804,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12956569,"byte_end":12956572,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12956577,"byte_end":12956667,"line_start":806,"line_end":806,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12956672,"byte_end":12956686,"line_start":807,"line_end":807,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12956691,"byte_end":12956694,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12956699,"byte_end":12956713,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12956718,"byte_end":12956721,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12956726,"byte_end":12956733,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12956738,"byte_end":12956795,"line_start":812,"line_end":812,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12956800,"byte_end":12956844,"line_start":813,"line_end":813,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12956849,"byte_end":12956852,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12956857,"byte_end":12956917,"line_start":815,"line_end":815,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12956922,"byte_end":12956952,"line_start":816,"line_end":816,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_or(2, SeqCst, guard).tag(), 1);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12956957,"byte_end":12957011,"line_start":817,"line_end":817,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 3);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12957016,"byte_end":12957063,"line_start":818,"line_end":818,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12957068,"byte_end":12957075,"line_start":819,"line_end":819,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12957995,"byte_end":12958004,"line_start":843,"line_end":843,"column_start":12,"column_end":21},"name":"fetch_xor","qualname":"<Atomic<T>>::fetch_xor","value":"pub fn fetch_xor<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"xor\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"xor\" with the current tag.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12957264,"byte_end":12957303,"line_start":824,"line_end":824,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12957308,"byte_end":12957311,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"xor\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12957316,"byte_end":12957410,"line_start":826,"line_end":826,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12957415,"byte_end":12957471,"line_start":827,"line_end":827,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12957476,"byte_end":12957479,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12957484,"byte_end":12957574,"line_start":829,"line_end":829,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12957579,"byte_end":12957593,"line_start":830,"line_end":830,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12957598,"byte_end":12957601,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12957606,"byte_end":12957620,"line_start":832,"line_end":832,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12957625,"byte_end":12957628,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12957633,"byte_end":12957640,"line_start":834,"line_end":834,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12957645,"byte_end":12957702,"line_start":835,"line_end":835,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12957707,"byte_end":12957751,"line_start":836,"line_end":836,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12957756,"byte_end":12957759,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12957764,"byte_end":12957824,"line_start":838,"line_end":838,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12957829,"byte_end":12957859,"line_start":839,"line_end":839,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_xor(3, SeqCst, guard).tag(), 1);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12957864,"byte_end":12957919,"line_start":840,"line_end":840,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12957924,"byte_end":12957971,"line_start":841,"line_end":841,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12957976,"byte_end":12957983,"line_start":842,"line_end":842,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12959301,"byte_end":12959311,"line_start":881,"line_end":881,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Atomic<T>>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12958174,"byte_end":12958209,"line_start":847,"line_end":847,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12958214,"byte_end":12958217,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ This consumes the atomic and converts it into [`Owned`]. As [`Atomic`] doesn't have a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12958222,"byte_end":12958311,"line_start":849,"line_end":849,"column_start":5,"column_end":94}},{"value":"/ destructor and doesn't drop the pointee while [`Owned`] does, this is suitable for","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12958316,"byte_end":12958402,"line_start":850,"line_end":850,"column_start":5,"column_end":91}},{"value":"/ destructors of data structures.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12958407,"byte_end":12958442,"line_start":851,"line_end":851,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12958447,"byte_end":12958450,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12958455,"byte_end":12958467,"line_start":853,"line_end":853,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12958472,"byte_end":12958475,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12958480,"byte_end":12958539,"line_start":855,"line_end":855,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12958544,"byte_end":12958547,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12958552,"byte_end":12958564,"line_start":857,"line_end":857,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12958569,"byte_end":12958572,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12958577,"byte_end":12958664,"line_start":859,"line_end":859,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12958669,"byte_end":12958702,"line_start":860,"line_end":860,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12958707,"byte_end":12958710,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12958715,"byte_end":12958729,"line_start":862,"line_end":862,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12958734,"byte_end":12958737,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12958742,"byte_end":12958753,"line_start":864,"line_end":864,"column_start":5,"column_end":16}},{"value":"/ # use std::mem;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12958758,"byte_end":12958777,"line_start":865,"line_end":865,"column_start":5,"column_end":24}},{"value":"/ # use crossbeam_epoch::Atomic;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12958782,"byte_end":12958816,"line_start":866,"line_end":866,"column_start":5,"column_end":39}},{"value":"/ struct DataStructure {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12958821,"byte_end":12958847,"line_start":867,"line_end":867,"column_start":5,"column_end":31}},{"value":"/     ptr: Atomic<usize>,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12958852,"byte_end":12958879,"line_start":868,"line_end":868,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12958884,"byte_end":12958889,"line_start":869,"line_end":869,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12958894,"byte_end":12958897,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ impl Drop for DataStructure {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12958902,"byte_end":12958935,"line_start":871,"line_end":871,"column_start":5,"column_end":38}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12958940,"byte_end":12958968,"line_start":872,"line_end":872,"column_start":5,"column_end":33}},{"value":"/         // By now the DataStructure lives only in our thread and we are sure we don't hold","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12958973,"byte_end":12959067,"line_start":873,"line_end":873,"column_start":5,"column_end":99}},{"value":"/         // any Shared or & to it ourselves.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12959072,"byte_end":12959119,"line_start":874,"line_end":874,"column_start":5,"column_end":52}},{"value":"/         unsafe {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12959124,"byte_end":12959144,"line_start":875,"line_end":875,"column_start":5,"column_end":25}},{"value":"/             drop(mem::replace(&mut self.ptr, Atomic::null()).into_owned());","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12959149,"byte_end":12959228,"line_start":876,"line_end":876,"column_start":5,"column_end":84}},{"value":"/         }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12959233,"byte_end":12959246,"line_start":877,"line_end":877,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12959251,"byte_end":12959260,"line_start":878,"line_end":878,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12959265,"byte_end":12959270,"line_start":879,"line_end":879,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12959275,"byte_end":12959282,"line_start":880,"line_end":880,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12960998,"byte_end":12961012,"line_start":928,"line_end":928,"column_start":19,"column_end":33},"name":"try_into_owned","qualname":"<Atomic<T>>::try_into_owned","value":"pub unsafe fn try_into_owned(Self) -> Option<Owned<T>>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee if it is non-null.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee if it is non-null.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12959779,"byte_end":12959832,"line_start":895,"line_end":895,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12959837,"byte_end":12959840,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ This consumes the atomic and converts it into [`Owned`]. As [`Atomic`] doesn't have a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12959845,"byte_end":12959934,"line_start":897,"line_end":897,"column_start":5,"column_end":94}},{"value":"/ destructor and doesn't drop the pointee while [`Owned`] does, this is suitable for","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12959939,"byte_end":12960025,"line_start":898,"line_end":898,"column_start":5,"column_end":91}},{"value":"/ destructors of data structures.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12960030,"byte_end":12960065,"line_start":899,"line_end":899,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12960070,"byte_end":12960073,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12960078,"byte_end":12960090,"line_start":901,"line_end":901,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12960095,"byte_end":12960098,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12960103,"byte_end":12960190,"line_start":903,"line_end":903,"column_start":5,"column_end":92}},{"value":"/ reference to the same object, or the pointer is null.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12960195,"byte_end":12960252,"line_start":904,"line_end":904,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12960257,"byte_end":12960260,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12960265,"byte_end":12960279,"line_start":906,"line_end":906,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12960284,"byte_end":12960287,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12960292,"byte_end":12960303,"line_start":908,"line_end":908,"column_start":5,"column_end":16}},{"value":"/ # use std::mem;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12960308,"byte_end":12960327,"line_start":909,"line_end":909,"column_start":5,"column_end":24}},{"value":"/ # use crossbeam_epoch::Atomic;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12960332,"byte_end":12960366,"line_start":910,"line_end":910,"column_start":5,"column_end":39}},{"value":"/ struct DataStructure {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12960371,"byte_end":12960397,"line_start":911,"line_end":911,"column_start":5,"column_end":31}},{"value":"/     ptr: Atomic<usize>,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12960402,"byte_end":12960429,"line_start":912,"line_end":912,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12960434,"byte_end":12960439,"line_start":913,"line_end":913,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12960444,"byte_end":12960447,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ impl Drop for DataStructure {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12960452,"byte_end":12960485,"line_start":915,"line_end":915,"column_start":5,"column_end":38}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12960490,"byte_end":12960518,"line_start":916,"line_end":916,"column_start":5,"column_end":33}},{"value":"/         // By now the DataStructure lives only in our thread and we are sure we don't hold","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12960523,"byte_end":12960617,"line_start":917,"line_end":917,"column_start":5,"column_end":99}},{"value":"/         // any Shared or & to it ourselves, but it may be null, so we have to be careful.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12960622,"byte_end":12960715,"line_start":918,"line_end":918,"column_start":5,"column_end":98}},{"value":"/         let old = mem::replace(&mut self.ptr, Atomic::null());","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12960720,"byte_end":12960786,"line_start":919,"line_end":919,"column_start":5,"column_end":71}},{"value":"/         unsafe {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12960791,"byte_end":12960811,"line_start":920,"line_end":920,"column_start":5,"column_end":25}},{"value":"/             if let Some(x) = old.try_into_owned() {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12960816,"byte_end":12960871,"line_start":921,"line_end":921,"column_start":5,"column_end":60}},{"value":"/                 drop(x)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12960876,"byte_end":12960903,"line_start":922,"line_end":922,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12960908,"byte_end":12960925,"line_start":923,"line_end":923,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12960930,"byte_end":12960943,"line_start":924,"line_end":924,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12960948,"byte_end":12960957,"line_start":925,"line_end":925,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12960962,"byte_end":12960967,"line_start":926,"line_end":926,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12960972,"byte_end":12960979,"line_start":927,"line_end":927,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12963983,"byte_end":12963990,"line_start":1041,"line_end":1041,"column_start":11,"column_end":18},"name":"Pointer","qualname":"::atomic::Pointer","value":"Pointer<T: ?Sized + Pointable>","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246}],"decl_id":null,"docs":" A trait for either `Owned` or `Shared` pointers.\n","sig":null,"attributes":[{"value":"/ A trait for either `Owned` or `Shared` pointers.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12963920,"byte_end":12963972,"line_start":1040,"line_end":1040,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12964082,"byte_end":12964092,"line_start":1043,"line_end":1043,"column_start":8,"column_end":18},"name":"into_usize","qualname":"::atomic::Pointer::into_usize","value":"pub fn into_usize(Self) -> usize","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Returns the machine representation of the pointer.\n","sig":null,"attributes":[{"value":"/ Returns the machine representation of the pointer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12964020,"byte_end":12964074,"line_start":1042,"line_end":1042,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12964399,"byte_end":12964409,"line_start":1051,"line_end":1051,"column_start":15,"column_end":25},"name":"from_usize","qualname":"::atomic::Pointer::from_usize","value":"pub unsafe fn from_usize(usize) -> Self","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Returns a new pointer pointing to the tagged pointer `data`.","sig":null,"attributes":[{"value":"/ Returns a new pointer pointing to the tagged pointer `data`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12964114,"byte_end":12964178,"line_start":1045,"line_end":1045,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12964183,"byte_end":12964186,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12964191,"byte_end":12964203,"line_start":1047,"line_end":1047,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12964208,"byte_end":12964211,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/ The given `data` should have been created by `Pointer::into_usize()`, and one `data` should","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12964216,"byte_end":12964311,"line_start":1049,"line_end":1049,"column_start":5,"column_end":100}},{"value":"/ not be converted back by `Pointer::from_usize()` multiple times.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12964316,"byte_end":12964384,"line_start":1050,"line_end":1050,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12964675,"byte_end":12964680,"line_start":1060,"line_end":1060,"column_start":12,"column_end":17},"name":"Owned","qualname":"::atomic::Owned","value":"Owned {  }","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":250}],"decl_id":null,"docs":" An owned heap-allocated object.","sig":null,"attributes":[{"value":"/ An owned heap-allocated object.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12964435,"byte_end":12964470,"line_start":1054,"line_end":1054,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12964471,"byte_end":12964474,"line_start":1055,"line_end":1055,"column_start":1,"column_end":4}},{"value":"/ This type is very similar to `Box<T>`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12964475,"byte_end":12964517,"line_start":1056,"line_end":1056,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12964518,"byte_end":12964521,"line_start":1057,"line_end":1057,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12964522,"byte_end":12964620,"line_start":1058,"line_end":1058,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12964621,"byte_end":12964663,"line_start":1059,"line_end":1059,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12966078,"byte_end":12966086,"line_start":1111,"line_end":1111,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Owned<T>>::from_raw","value":"pub unsafe fn from_raw(*mut T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new owned pointer pointing to `raw`.","sig":null,"attributes":[{"value":"/ Returns a new owned pointer pointing to `raw`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12965330,"byte_end":12965380,"line_start":1089,"line_end":1089,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12965385,"byte_end":12965388,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because improper use may lead to memory problems. Argument `raw`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12965393,"byte_end":12965485,"line_start":1091,"line_end":1091,"column_start":5,"column_end":97}},{"value":"/ must be a valid pointer. Also, a double-free may occur if the function is called twice on","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12965490,"byte_end":12965583,"line_start":1092,"line_end":1092,"column_start":5,"column_end":98}},{"value":"/ the same raw pointer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12965588,"byte_end":12965613,"line_start":1093,"line_end":1093,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12965618,"byte_end":12965621,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12965626,"byte_end":12965638,"line_start":1095,"line_end":1095,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12965643,"byte_end":12965646,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/ Panics if `raw` is not properly aligned.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12965651,"byte_end":12965695,"line_start":1097,"line_end":1097,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12965700,"byte_end":12965703,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12965708,"byte_end":12965720,"line_start":1099,"line_end":1099,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12965725,"byte_end":12965728,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ The given `raw` should have been derived from `Owned`, and one `raw` should not be converted","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12965733,"byte_end":12965829,"line_start":1101,"line_end":1101,"column_start":5,"column_end":101}},{"value":"/ back by `Owned::from_raw()` multiple times.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12965834,"byte_end":12965881,"line_start":1102,"line_end":1102,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12965886,"byte_end":12965889,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12965894,"byte_end":12965908,"line_start":1104,"line_end":1104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12965913,"byte_end":12965916,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12965921,"byte_end":12965928,"line_start":1106,"line_end":1106,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12965933,"byte_end":12965964,"line_start":1107,"line_end":1107,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12965969,"byte_end":12965972,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/ let o = unsafe { Owned::from_raw(Box::into_raw(Box::new(1234))) };","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12965977,"byte_end":12966047,"line_start":1109,"line_end":1109,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12966052,"byte_end":12966059,"line_start":1110,"line_end":1110,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12966484,"byte_end":12966492,"line_start":1128,"line_end":1128,"column_start":12,"column_end":20},"name":"into_box","qualname":"<Owned<T>>::into_box","value":"pub fn into_box(Self) -> Box<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a `Box`.","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a `Box`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12966221,"byte_end":12966265,"line_start":1117,"line_end":1117,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12966270,"byte_end":12966273,"line_start":1118,"line_end":1118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12966278,"byte_end":12966292,"line_start":1119,"line_end":1119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12966297,"byte_end":12966300,"line_start":1120,"line_end":1120,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12966305,"byte_end":12966312,"line_start":1121,"line_end":1121,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12966317,"byte_end":12966348,"line_start":1122,"line_end":1122,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12966353,"byte_end":12966356,"line_start":1123,"line_end":1123,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12966361,"byte_end":12966390,"line_start":1124,"line_end":1124,"column_start":5,"column_end":34}},{"value":"/ let b: Box<i32> = o.into_box();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12966395,"byte_end":12966430,"line_start":1125,"line_end":1125,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(*b, 1234);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12966435,"byte_end":12966460,"line_start":1126,"line_end":1126,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12966465,"byte_end":12966472,"line_start":1127,"line_end":1127,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12966881,"byte_end":12966884,"line_start":1143,"line_end":1143,"column_start":12,"column_end":15},"name":"new","qualname":"<Owned<T>>::new","value":"pub fn new(T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12966651,"byte_end":12966732,"line_start":1134,"line_end":1134,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12966737,"byte_end":12966740,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12966745,"byte_end":12966759,"line_start":1136,"line_end":1136,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12966764,"byte_end":12966767,"line_start":1137,"line_end":1137,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12966772,"byte_end":12966779,"line_start":1138,"line_end":1138,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12966784,"byte_end":12966815,"line_start":1139,"line_end":1139,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12966820,"byte_end":12966823,"line_start":1140,"line_end":1140,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12966828,"byte_end":12966857,"line_start":1141,"line_end":1141,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12966862,"byte_end":12966869,"line_start":1142,"line_end":1142,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12967223,"byte_end":12967227,"line_start":1158,"line_end":1158,"column_start":12,"column_end":16},"name":"init","qualname":"<Owned<T>>::init","value":"pub fn init(T::Init) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12966985,"byte_end":12967066,"line_start":1149,"line_end":1149,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12967071,"byte_end":12967074,"line_start":1150,"line_end":1150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12967079,"byte_end":12967093,"line_start":1151,"line_end":1151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12967098,"byte_end":12967101,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12967106,"byte_end":12967113,"line_start":1153,"line_end":1153,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12967118,"byte_end":12967149,"line_start":1154,"line_end":1154,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12967154,"byte_end":12967157,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::<i32>::init(1234);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12967162,"byte_end":12967199,"line_start":1156,"line_end":1156,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12967204,"byte_end":12967211,"line_start":1157,"line_end":1157,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12967705,"byte_end":12967716,"line_start":1175,"line_end":1175,"column_start":12,"column_end":23},"name":"into_shared","qualname":"<Owned<T>>::into_shared","value":"pub fn into_shared<'g>(Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a [`Shared`].","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a [`Shared`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12967319,"byte_end":12967368,"line_start":1162,"line_end":1162,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12967373,"byte_end":12967376,"line_start":1163,"line_end":1163,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12967381,"byte_end":12967395,"line_start":1164,"line_end":1164,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12967400,"byte_end":12967403,"line_start":1165,"line_end":1165,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12967408,"byte_end":12967415,"line_start":1166,"line_end":1166,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Owned};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12967420,"byte_end":12967468,"line_start":1167,"line_end":1167,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12967473,"byte_end":12967476,"line_start":1168,"line_end":1168,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12967481,"byte_end":12967510,"line_start":1169,"line_end":1169,"column_start":5,"column_end":34}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12967515,"byte_end":12967545,"line_start":1170,"line_end":1170,"column_start":5,"column_end":35}},{"value":"/ let p = o.into_shared(guard);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12967550,"byte_end":12967583,"line_start":1171,"line_end":1171,"column_start":5,"column_end":38}},{"value":"/ # unsafe { drop(p.into_owned()); } // avoid leak","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12967588,"byte_end":12967640,"line_start":1172,"line_end":1172,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12967645,"byte_end":12967652,"line_start":1173,"line_end":1173,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12967657,"byte_end":12967693,"line_start":1174,"line_end":1174,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12968036,"byte_end":12968039,"line_start":1188,"line_end":1188,"column_start":12,"column_end":15},"name":"tag","qualname":"<Owned<T>>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12967828,"byte_end":12967874,"line_start":1179,"line_end":1179,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12967879,"byte_end":12967882,"line_start":1180,"line_end":1180,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12967887,"byte_end":12967901,"line_start":1181,"line_end":1181,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12967906,"byte_end":12967909,"line_start":1182,"line_end":1182,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12967914,"byte_end":12967921,"line_start":1183,"line_end":1183,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12967926,"byte_end":12967957,"line_start":1184,"line_end":1184,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12967962,"byte_end":12967965,"line_start":1185,"line_end":1185,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Owned::new(1234).tag(), 0);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12967970,"byte_end":12968012,"line_start":1186,"line_end":1186,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12968017,"byte_end":12968024,"line_start":1187,"line_end":1187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12968512,"byte_end":12968520,"line_start":1206,"line_end":1206,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Owned<T>>::with_tag","value":"pub fn with_tag(Self, usize) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12968135,"byte_end":12968225,"line_start":1193,"line_end":1193,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12968230,"byte_end":12968268,"line_start":1194,"line_end":1194,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12968273,"byte_end":12968276,"line_start":1195,"line_end":1195,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12968281,"byte_end":12968295,"line_start":1196,"line_end":1196,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12968300,"byte_end":12968303,"line_start":1197,"line_end":1197,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12968308,"byte_end":12968315,"line_start":1198,"line_end":1198,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12968320,"byte_end":12968351,"line_start":1199,"line_end":1199,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12968356,"byte_end":12968359,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(0u64);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12968364,"byte_end":12968393,"line_start":1201,"line_end":1201,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(o.tag(), 0);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12968398,"byte_end":12968425,"line_start":1202,"line_end":1202,"column_start":5,"column_end":32}},{"value":"/ let o = o.with_tag(2);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12968430,"byte_end":12968456,"line_start":1203,"line_end":1203,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(o.tag(), 2);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12968461,"byte_end":12968488,"line_start":1204,"line_end":1204,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12968493,"byte_end":12968500,"line_start":1205,"line_end":1205,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":301},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12970982,"byte_end":12970988,"line_start":1309,"line_end":1309,"column_start":12,"column_end":18},"name":"Shared","qualname":"::atomic::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305}],"decl_id":null,"docs":" A pointer to an object protected by the epoch GC.","sig":null,"attributes":[{"value":"/ A pointer to an object protected by the epoch GC.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12970703,"byte_end":12970756,"line_start":1303,"line_end":1303,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12970757,"byte_end":12970760,"line_start":1304,"line_end":1304,"column_start":1,"column_end":4}},{"value":"/ The pointer is valid for use only during the lifetime `'g`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12970761,"byte_end":12970824,"line_start":1305,"line_end":1305,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12970825,"byte_end":12970828,"line_start":1306,"line_end":1306,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12970829,"byte_end":12970927,"line_start":1307,"line_end":1307,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12970928,"byte_end":12970970,"line_start":1308,"line_end":1308,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12972167,"byte_end":12972173,"line_start":1358,"line_end":1358,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<Shared>::as_raw","value":"pub fn as_raw(&Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a raw pointer (without the tag).","sig":null,"attributes":[{"value":"/ Converts the pointer to a raw pointer (without the tag).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12971640,"byte_end":12971700,"line_start":1341,"line_end":1341,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12971705,"byte_end":12971708,"line_start":1342,"line_end":1342,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12971713,"byte_end":12971727,"line_start":1343,"line_end":1343,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12971732,"byte_end":12971735,"line_start":1344,"line_end":1344,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12971740,"byte_end":12971747,"line_start":1345,"line_end":1345,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12971752,"byte_end":12971808,"line_start":1346,"line_end":1346,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12971813,"byte_end":12971857,"line_start":1347,"line_end":1347,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12971862,"byte_end":12971865,"line_start":1348,"line_end":1348,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12971870,"byte_end":12971899,"line_start":1349,"line_end":1349,"column_start":5,"column_end":34}},{"value":"/ let raw = &*o as *const _;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12971904,"byte_end":12971934,"line_start":1350,"line_end":1350,"column_start":5,"column_end":35}},{"value":"/ let a = Atomic::from(o);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12971939,"byte_end":12971967,"line_start":1351,"line_end":1351,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12971972,"byte_end":12971975,"line_start":1352,"line_end":1352,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12971980,"byte_end":12972010,"line_start":1353,"line_end":1353,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12972015,"byte_end":12972049,"line_start":1354,"line_end":1354,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.as_raw(), raw);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12972054,"byte_end":12972086,"line_start":1355,"line_end":1355,"column_start":5,"column_end":37}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12972091,"byte_end":12972143,"line_start":1356,"line_end":1356,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12972148,"byte_end":12972155,"line_start":1357,"line_end":1357,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12972550,"byte_end":12972554,"line_start":1375,"line_end":1375,"column_start":12,"column_end":16},"name":"null","qualname":"<Shared>::null","value":"pub fn null() -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null pointer.","sig":null,"attributes":[{"value":"/ Returns a new null pointer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12972334,"byte_end":12972365,"line_start":1365,"line_end":1365,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12972370,"byte_end":12972373,"line_start":1366,"line_end":1366,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12972378,"byte_end":12972392,"line_start":1367,"line_end":1367,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12972397,"byte_end":12972400,"line_start":1368,"line_end":1368,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12972405,"byte_end":12972412,"line_start":1369,"line_end":1369,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Shared;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12972417,"byte_end":12972449,"line_start":1370,"line_end":1370,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12972454,"byte_end":12972457,"line_start":1371,"line_end":1371,"column_start":5,"column_end":8}},{"value":"/ let p = Shared::<i32>::null();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12972462,"byte_end":12972496,"line_start":1372,"line_end":1372,"column_start":5,"column_end":39}},{"value":"/ assert!(p.is_null());","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12972501,"byte_end":12972526,"line_start":1373,"line_end":1373,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12972531,"byte_end":12972538,"line_start":1374,"line_end":1374,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12973168,"byte_end":12973175,"line_start":1397,"line_end":1397,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Shared>::is_null","value":"pub fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the pointer is null.","sig":null,"attributes":[{"value":"/ Returns `true` if the pointer is null.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12972669,"byte_end":12972711,"line_start":1382,"line_end":1382,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12972716,"byte_end":12972719,"line_start":1383,"line_end":1383,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12972724,"byte_end":12972738,"line_start":1384,"line_end":1384,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12972743,"byte_end":12972746,"line_start":1385,"line_end":1385,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12972751,"byte_end":12972758,"line_start":1386,"line_end":1386,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12972763,"byte_end":12972819,"line_start":1387,"line_end":1387,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12972824,"byte_end":12972868,"line_start":1388,"line_end":1388,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12972873,"byte_end":12972876,"line_start":1389,"line_end":1389,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::null();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12972881,"byte_end":12972908,"line_start":1390,"line_end":1390,"column_start":5,"column_end":32}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12972913,"byte_end":12972943,"line_start":1391,"line_end":1391,"column_start":5,"column_end":35}},{"value":"/ assert!(a.load(SeqCst, guard).is_null());","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12972948,"byte_end":12972993,"line_start":1392,"line_end":1392,"column_start":5,"column_end":50}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12972998,"byte_end":12973036,"line_start":1393,"line_end":1393,"column_start":5,"column_end":43}},{"value":"/ assert!(!a.load(SeqCst, guard).is_null());","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12973041,"byte_end":12973087,"line_start":1394,"line_end":1394,"column_start":5,"column_end":51}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12973092,"byte_end":12973144,"line_start":1395,"line_end":1395,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12973149,"byte_end":12973156,"line_start":1396,"line_end":1396,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12974512,"byte_end":12974517,"line_start":1434,"line_end":1434,"column_start":19,"column_end":24},"name":"deref","qualname":"<Shared>::deref","value":"pub unsafe fn deref(&Self) -> &'g T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12973275,"byte_end":12973304,"line_start":1402,"line_end":1402,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12973309,"byte_end":12973312,"line_start":1403,"line_end":1403,"column_start":5,"column_end":8}},{"value":"/ Returns a reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12973317,"byte_end":12973395,"line_start":1404,"line_end":1404,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12973400,"byte_end":12973403,"line_start":1405,"line_end":1405,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12973408,"byte_end":12973420,"line_start":1406,"line_end":1406,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12973425,"byte_end":12973428,"line_start":1407,"line_end":1407,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12973433,"byte_end":12973518,"line_start":1408,"line_end":1408,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12973523,"byte_end":12973526,"line_start":1409,"line_end":1409,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12973531,"byte_end":12973622,"line_start":1410,"line_end":1410,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12973627,"byte_end":12973676,"line_start":1411,"line_end":1411,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12973681,"byte_end":12973684,"line_start":1412,"line_end":1412,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12973689,"byte_end":12973761,"line_start":1413,"line_end":1413,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12973766,"byte_end":12973841,"line_start":1414,"line_end":1414,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12973846,"byte_end":12973849,"line_start":1415,"line_end":1415,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12973854,"byte_end":12973947,"line_start":1416,"line_end":1416,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12973952,"byte_end":12974045,"line_start":1417,"line_end":1417,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12974050,"byte_end":12974088,"line_start":1418,"line_end":1418,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12974093,"byte_end":12974096,"line_start":1419,"line_end":1419,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12974101,"byte_end":12974115,"line_start":1420,"line_end":1420,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12974120,"byte_end":12974123,"line_start":1421,"line_end":1421,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12974128,"byte_end":12974135,"line_start":1422,"line_end":1422,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12974140,"byte_end":12974189,"line_start":1423,"line_end":1423,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12974194,"byte_end":12974238,"line_start":1424,"line_end":1424,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12974243,"byte_end":12974246,"line_start":1425,"line_end":1425,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12974251,"byte_end":12974281,"line_start":1426,"line_end":1426,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12974286,"byte_end":12974316,"line_start":1427,"line_end":1427,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12974321,"byte_end":12974355,"line_start":1428,"line_end":1428,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12974360,"byte_end":12974372,"line_start":1429,"line_end":1429,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &1234);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12974377,"byte_end":12974414,"line_start":1430,"line_end":1430,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12974419,"byte_end":12974424,"line_start":1431,"line_end":1431,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12974429,"byte_end":12974481,"line_start":1432,"line_end":1432,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12974486,"byte_end":12974493,"line_start":1433,"line_end":1433,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12975840,"byte_end":12975849,"line_start":1476,"line_end":1476,"column_start":19,"column_end":28},"name":"deref_mut","qualname":"<Shared>::deref_mut","value":"pub unsafe fn deref_mut(&mut Self) -> &'g mut T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12974623,"byte_end":12974652,"line_start":1439,"line_end":1439,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12974657,"byte_end":12974660,"line_start":1440,"line_end":1440,"column_start":5,"column_end":8}},{"value":"/ Returns a mutable reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12974665,"byte_end":12974751,"line_start":1441,"line_end":1441,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12974756,"byte_end":12974759,"line_start":1442,"line_end":1442,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12974764,"byte_end":12974776,"line_start":1443,"line_end":1443,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12974781,"byte_end":12974784,"line_start":1444,"line_end":1444,"column_start":5,"column_end":8}},{"value":"/ * There is no guarantee that there are no more threads attempting to read/write from/to the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12974789,"byte_end":12974884,"line_start":1445,"line_end":1445,"column_start":5,"column_end":100}},{"value":"/   actual object at the same time.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12974889,"byte_end":12974926,"line_start":1446,"line_end":1446,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12974931,"byte_end":12974934,"line_start":1447,"line_end":1447,"column_start":5,"column_end":8}},{"value":"/   The user must know that there are no concurrent accesses towards the object itself.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12974939,"byte_end":12975028,"line_start":1448,"line_end":1448,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12975033,"byte_end":12975036,"line_start":1449,"line_end":1449,"column_start":5,"column_end":8}},{"value":"/ * Other than the above, all safety concerns of `deref()` applies here.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12975041,"byte_end":12975115,"line_start":1450,"line_end":1450,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12975120,"byte_end":12975123,"line_start":1451,"line_end":1451,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12975128,"byte_end":12975142,"line_start":1452,"line_end":1452,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12975147,"byte_end":12975150,"line_start":1453,"line_end":1453,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12975155,"byte_end":12975162,"line_start":1454,"line_end":1454,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12975167,"byte_end":12975216,"line_start":1455,"line_end":1455,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12975221,"byte_end":12975265,"line_start":1456,"line_end":1456,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12975270,"byte_end":12975273,"line_start":1457,"line_end":1457,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(vec![1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12975278,"byte_end":12975320,"line_start":1458,"line_end":1458,"column_start":5,"column_end":47}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12975325,"byte_end":12975355,"line_start":1459,"line_end":1459,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12975360,"byte_end":12975363,"line_start":1460,"line_end":1460,"column_start":5,"column_end":8}},{"value":"/ let mut p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12975368,"byte_end":12975406,"line_start":1461,"line_end":1461,"column_start":5,"column_end":43}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12975411,"byte_end":12975423,"line_start":1462,"line_end":1462,"column_start":5,"column_end":17}},{"value":"/     assert!(!p.is_null());","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12975428,"byte_end":12975458,"line_start":1463,"line_end":1463,"column_start":5,"column_end":35}},{"value":"/     let b = p.deref_mut();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12975463,"byte_end":12975493,"line_start":1464,"line_end":1464,"column_start":5,"column_end":35}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12975498,"byte_end":12975539,"line_start":1465,"line_end":1465,"column_start":5,"column_end":46}},{"value":"/     b.push(5);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12975544,"byte_end":12975562,"line_start":1466,"line_end":1466,"column_start":5,"column_end":23}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12975567,"byte_end":12975611,"line_start":1467,"line_end":1467,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12975616,"byte_end":12975621,"line_start":1468,"line_end":1468,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12975626,"byte_end":12975629,"line_start":1469,"line_end":1469,"column_start":5,"column_end":8}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12975634,"byte_end":12975668,"line_start":1470,"line_end":1470,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12975673,"byte_end":12975685,"line_start":1471,"line_end":1471,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &vec![1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12975690,"byte_end":12975742,"line_start":1472,"line_end":1472,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12975747,"byte_end":12975752,"line_start":1473,"line_end":1473,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12975757,"byte_end":12975809,"line_start":1474,"line_end":1474,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12975814,"byte_end":12975821,"line_start":1475,"line_end":1475,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12977239,"byte_end":12977245,"line_start":1513,"line_end":1513,"column_start":19,"column_end":25},"name":"as_ref","qualname":"<Shared>::as_ref","value":"pub unsafe fn as_ref(&Self) -> Option<&'g T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a reference.","sig":null,"attributes":[{"value":"/ Converts the pointer to a reference.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12975967,"byte_end":12976007,"line_start":1481,"line_end":1481,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12976012,"byte_end":12976015,"line_start":1482,"line_end":1482,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the pointer is null, or else a reference to the object wrapped in `Some`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12976020,"byte_end":12976115,"line_start":1483,"line_end":1483,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12976120,"byte_end":12976123,"line_start":1484,"line_end":1484,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12976128,"byte_end":12976140,"line_start":1485,"line_end":1485,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12976145,"byte_end":12976148,"line_start":1486,"line_end":1486,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12976153,"byte_end":12976238,"line_start":1487,"line_end":1487,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12976243,"byte_end":12976246,"line_start":1488,"line_end":1488,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12976251,"byte_end":12976342,"line_start":1489,"line_end":1489,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12976347,"byte_end":12976396,"line_start":1490,"line_end":1490,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12976401,"byte_end":12976404,"line_start":1491,"line_end":1491,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12976409,"byte_end":12976481,"line_start":1492,"line_end":1492,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12976486,"byte_end":12976561,"line_start":1493,"line_end":1493,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12976566,"byte_end":12976569,"line_start":1494,"line_end":1494,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12976574,"byte_end":12976667,"line_start":1495,"line_end":1495,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12976672,"byte_end":12976765,"line_start":1496,"line_end":1496,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12976770,"byte_end":12976808,"line_start":1497,"line_end":1497,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12976813,"byte_end":12976816,"line_start":1498,"line_end":1498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12976821,"byte_end":12976835,"line_start":1499,"line_end":1499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12976840,"byte_end":12976843,"line_start":1500,"line_end":1500,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12976848,"byte_end":12976855,"line_start":1501,"line_end":1501,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12976860,"byte_end":12976909,"line_start":1502,"line_end":1502,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12976914,"byte_end":12976958,"line_start":1503,"line_end":1503,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12976963,"byte_end":12976966,"line_start":1504,"line_end":1504,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12976971,"byte_end":12977001,"line_start":1505,"line_end":1505,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12977006,"byte_end":12977036,"line_start":1506,"line_end":1506,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12977041,"byte_end":12977075,"line_start":1507,"line_end":1507,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12977080,"byte_end":12977092,"line_start":1508,"line_end":1508,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.as_ref(), Some(&1234));","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12977097,"byte_end":12977141,"line_start":1509,"line_end":1509,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12977146,"byte_end":12977151,"line_start":1510,"line_end":1510,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12977156,"byte_end":12977208,"line_start":1511,"line_end":1511,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12977213,"byte_end":12977220,"line_start":1512,"line_end":1512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12978105,"byte_end":12978115,"line_start":1546,"line_end":1546,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Shared>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12977435,"byte_end":12977470,"line_start":1522,"line_end":1522,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12977475,"byte_end":12977478,"line_start":1523,"line_end":1523,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12977483,"byte_end":12977495,"line_start":1524,"line_end":1524,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12977500,"byte_end":12977503,"line_start":1525,"line_end":1525,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12977508,"byte_end":12977567,"line_start":1526,"line_end":1526,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12977572,"byte_end":12977575,"line_start":1527,"line_end":1527,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12977580,"byte_end":12977592,"line_start":1528,"line_end":1528,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12977597,"byte_end":12977600,"line_start":1529,"line_end":1529,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12977605,"byte_end":12977692,"line_start":1530,"line_end":1530,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12977697,"byte_end":12977730,"line_start":1531,"line_end":1531,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12977735,"byte_end":12977738,"line_start":1532,"line_end":1532,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12977743,"byte_end":12977757,"line_start":1533,"line_end":1533,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12977762,"byte_end":12977765,"line_start":1534,"line_end":1534,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12977770,"byte_end":12977777,"line_start":1535,"line_end":1535,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12977782,"byte_end":12977831,"line_start":1536,"line_end":1536,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12977836,"byte_end":12977880,"line_start":1537,"line_end":1537,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12977885,"byte_end":12977888,"line_start":1538,"line_end":1538,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12977893,"byte_end":12977923,"line_start":1539,"line_end":1539,"column_start":5,"column_end":35}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12977928,"byte_end":12977940,"line_start":1540,"line_end":1540,"column_start":5,"column_end":17}},{"value":"/     let guard = &epoch::unprotected();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12977945,"byte_end":12977987,"line_start":1541,"line_end":1541,"column_start":5,"column_end":47}},{"value":"/     let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12977992,"byte_end":12978030,"line_start":1542,"line_end":1542,"column_start":5,"column_end":43}},{"value":"/     drop(p.into_owned());","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12978035,"byte_end":12978064,"line_start":1543,"line_end":1543,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12978069,"byte_end":12978074,"line_start":1544,"line_end":1544,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12978079,"byte_end":12978086,"line_start":1545,"line_end":1545,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12978940,"byte_end":12978954,"line_start":1573,"line_end":1573,"column_start":19,"column_end":33},"name":"try_into_owned","qualname":"<Shared>::try_into_owned","value":"pub unsafe fn try_into_owned(Self) -> Option<Owned<T>>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee if it is not null.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee if it is not null.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12978267,"byte_end":12978320,"line_start":1551,"line_end":1551,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12978325,"byte_end":12978328,"line_start":1552,"line_end":1552,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12978333,"byte_end":12978345,"line_start":1553,"line_end":1553,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12978350,"byte_end":12978353,"line_start":1554,"line_end":1554,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12978358,"byte_end":12978445,"line_start":1555,"line_end":1555,"column_start":5,"column_end":92}},{"value":"/ reference to the same object, or if the pointer is null.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12978450,"byte_end":12978510,"line_start":1556,"line_end":1556,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12978515,"byte_end":12978518,"line_start":1557,"line_end":1557,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12978523,"byte_end":12978537,"line_start":1558,"line_end":1558,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12978542,"byte_end":12978545,"line_start":1559,"line_end":1559,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12978550,"byte_end":12978557,"line_start":1560,"line_end":1560,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12978562,"byte_end":12978611,"line_start":1561,"line_end":1561,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12978616,"byte_end":12978660,"line_start":1562,"line_end":1562,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12978665,"byte_end":12978668,"line_start":1563,"line_end":1563,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12978673,"byte_end":12978703,"line_start":1564,"line_end":1564,"column_start":5,"column_end":35}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12978708,"byte_end":12978720,"line_start":1565,"line_end":1565,"column_start":5,"column_end":17}},{"value":"/     let guard = &epoch::unprotected();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12978725,"byte_end":12978767,"line_start":1566,"line_end":1566,"column_start":5,"column_end":47}},{"value":"/     let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12978772,"byte_end":12978810,"line_start":1567,"line_end":1567,"column_start":5,"column_end":43}},{"value":"/     if let Some(x) = p.try_into_owned() {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12978815,"byte_end":12978860,"line_start":1568,"line_end":1568,"column_start":5,"column_end":50}},{"value":"/         drop(x);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12978865,"byte_end":12978885,"line_start":1569,"line_end":1569,"column_start":5,"column_end":25}},{"value":"/     }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12978890,"byte_end":12978899,"line_start":1570,"line_end":1570,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12978904,"byte_end":12978909,"line_start":1571,"line_end":1571,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12978914,"byte_end":12978921,"line_start":1572,"line_end":1572,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12979578,"byte_end":12979581,"line_start":1595,"line_end":1595,"column_start":12,"column_end":15},"name":"tag","qualname":"<Shared>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12979113,"byte_end":12979159,"line_start":1581,"line_end":1581,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12979164,"byte_end":12979167,"line_start":1582,"line_end":1582,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12979172,"byte_end":12979186,"line_start":1583,"line_end":1583,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12979191,"byte_end":12979194,"line_start":1584,"line_end":1584,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12979199,"byte_end":12979206,"line_start":1585,"line_end":1585,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12979211,"byte_end":12979267,"line_start":1586,"line_end":1586,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12979272,"byte_end":12979316,"line_start":1587,"line_end":1587,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12979321,"byte_end":12979324,"line_start":1588,"line_end":1588,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<u64>::from(Owned::new(0u64).with_tag(2));","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12979329,"byte_end":12979391,"line_start":1589,"line_end":1589,"column_start":5,"column_end":67}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12979396,"byte_end":12979426,"line_start":1590,"line_end":1590,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12979431,"byte_end":12979465,"line_start":1591,"line_end":1591,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.tag(), 2);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12979470,"byte_end":12979497,"line_start":1592,"line_end":1592,"column_start":5,"column_end":32}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12979502,"byte_end":12979554,"line_start":1593,"line_end":1593,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12979559,"byte_end":12979566,"line_start":1594,"line_end":1594,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12980312,"byte_end":12980320,"line_start":1619,"line_end":1619,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Shared>::with_tag","value":"pub fn with_tag(&Self, usize) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12979677,"byte_end":12979767,"line_start":1600,"line_end":1600,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12979772,"byte_end":12979810,"line_start":1601,"line_end":1601,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12979815,"byte_end":12979818,"line_start":1602,"line_end":1602,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12979823,"byte_end":12979837,"line_start":1603,"line_end":1603,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12979842,"byte_end":12979845,"line_start":1604,"line_end":1604,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12979850,"byte_end":12979857,"line_start":1605,"line_end":1605,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12979862,"byte_end":12979911,"line_start":1606,"line_end":1606,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12979916,"byte_end":12979960,"line_start":1607,"line_end":1607,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12979965,"byte_end":12979968,"line_start":1608,"line_end":1608,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(0u64);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12979973,"byte_end":12980003,"line_start":1609,"line_end":1609,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12980008,"byte_end":12980038,"line_start":1610,"line_end":1610,"column_start":5,"column_end":35}},{"value":"/ let p1 = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12980043,"byte_end":12980078,"line_start":1611,"line_end":1611,"column_start":5,"column_end":40}},{"value":"/ let p2 = p1.with_tag(2);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12980083,"byte_end":12980111,"line_start":1612,"line_end":1612,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12980116,"byte_end":12980119,"line_start":1613,"line_end":1613,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(p1.tag(), 0);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12980124,"byte_end":12980152,"line_start":1614,"line_end":1614,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p2.tag(), 2);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12980157,"byte_end":12980185,"line_start":1615,"line_end":1615,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p1.as_raw(), p2.as_raw());","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12980190,"byte_end":12980231,"line_start":1616,"line_end":1616,"column_start":5,"column_end":46}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12980236,"byte_end":12980288,"line_start":1617,"line_end":1617,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12980293,"byte_end":12980300,"line_start":1618,"line_end":1618,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":373},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\collector.rs","byte_start":12983305,"byte_end":12983314,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"Collector","qualname":"::collector::Collector","value":"Collector {  }","parent":null,"children":[{"krate":0,"index":374}],"decl_id":null,"docs":" An epoch-based garbage collector.\n","sig":null,"attributes":[{"value":"/ An epoch-based garbage collector.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\collector.rs","byte_start":12983256,"byte_end":12983293,"line_start":21,"line_end":21,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\collector.rs","byte_start":12983621,"byte_end":12983624,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Collector>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new collector.\n","sig":null,"attributes":[{"value":"/ Creates a new collector.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\collector.rs","byte_start":12983581,"byte_end":12983609,"line_start":38,"line_end":38,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\collector.rs","byte_start":12983729,"byte_end":12983737,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"register","qualname":"<Collector>::register","value":"pub fn register(&Self) -> LocalHandle","parent":null,"children":[],"decl_id":null,"docs":" Registers a new handle for the collector.\n","sig":null,"attributes":[{"value":"/ Registers a new handle for the collector.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\collector.rs","byte_start":12983672,"byte_end":12983717,"line_start":43,"line_end":43,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":389},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\collector.rs","byte_start":12984405,"byte_end":12984416,"line_start":73,"line_end":73,"column_start":12,"column_end":23},"name":"LocalHandle","qualname":"::collector::LocalHandle","value":"LocalHandle {  }","parent":null,"children":[{"krate":0,"index":390}],"decl_id":null,"docs":" A handle to a garbage collector.\n","sig":null,"attributes":[{"value":"/ A handle to a garbage collector.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\collector.rs","byte_start":12984357,"byte_end":12984393,"line_start":72,"line_end":72,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\collector.rs","byte_start":12984527,"byte_end":12984530,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"pin","qualname":"<LocalHandle>::pin","value":"pub fn pin(&Self) -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the handle.\n","sig":null,"attributes":[{"value":"/ Pins the handle.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\collector.rs","byte_start":12984481,"byte_end":12984501,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\collector.rs","byte_start":12984506,"byte_end":12984515,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\collector.rs","byte_start":12984668,"byte_end":12984677,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"is_pinned","qualname":"<LocalHandle>::is_pinned","value":"pub fn is_pinned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the handle is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the handle is pinned.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\collector.rs","byte_start":12984599,"byte_end":12984642,"line_start":84,"line_end":84,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\collector.rs","byte_start":12984647,"byte_end":12984656,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\collector.rs","byte_start":12984833,"byte_end":12984842,"line_start":92,"line_end":92,"column_start":12,"column_end":21},"name":"collector","qualname":"<LocalHandle>::collector","value":"pub fn collector(&Self) -> &Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this handle.\n","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this handle.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\collector.rs","byte_start":12984751,"byte_end":12984807,"line_start":90,"line_end":90,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\collector.rs","byte_start":12984812,"byte_end":12984821,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":479},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13005776,"byte_end":13005781,"line_start":71,"line_end":71,"column_start":12,"column_end":17},"name":"Guard","qualname":"::guard::Guard","value":"Guard {  }","parent":null,"children":[{"krate":0,"index":480}],"decl_id":null,"docs":" A guard that keeps the current thread pinned.","sig":null,"attributes":[{"value":"/ A guard that keeps the current thread pinned.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13004007,"byte_end":13004056,"line_start":11,"line_end":11,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13004057,"byte_end":13004060,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13004061,"byte_end":13004074,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13004075,"byte_end":13004078,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The current thread is pinned by calling [`pin`], which returns a new guard:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13004079,"byte_end":13004158,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13004159,"byte_end":13004162,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13004163,"byte_end":13004170,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13004171,"byte_end":13004204,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13004205,"byte_end":13004208,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ // It is often convenient to prefix a call to `pin` with a `&` in order to create a reference.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13004209,"byte_end":13004307,"line_start":20,"line_end":20,"column_start":1,"column_end":99}},{"value":"/ // This is not really necessary, but makes passing references to the guard a bit easier.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13004308,"byte_end":13004400,"line_start":21,"line_end":21,"column_start":1,"column_end":93}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13004401,"byte_end":13004431,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13004432,"byte_end":13004439,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13004440,"byte_end":13004443,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ When a guard gets dropped, the current thread is automatically unpinned.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13004444,"byte_end":13004520,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13004521,"byte_end":13004524,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Pointers on the stack","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13004525,"byte_end":13004552,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13004553,"byte_end":13004556,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Having a guard allows us to create pointers on the stack to heap-allocated objects.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13004557,"byte_end":13004644,"line_start":29,"line_end":29,"column_start":1,"column_end":88}},{"value":"/ For example:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13004645,"byte_end":13004661,"line_start":30,"line_end":30,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13004662,"byte_end":13004665,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13004666,"byte_end":13004673,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13004674,"byte_end":13004723,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13004724,"byte_end":13004768,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13004769,"byte_end":13004772,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Create a heap-allocated number.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13004773,"byte_end":13004811,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13004812,"byte_end":13004841,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13004842,"byte_end":13004845,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ // Pin the current thread.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13004846,"byte_end":13004876,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13004877,"byte_end":13004907,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13004908,"byte_end":13004911,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Load the heap-allocated object and create pointer `p` on the stack.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13004912,"byte_end":13004986,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13004987,"byte_end":13005021,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13005022,"byte_end":13005025,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // Dereference the pointer and print the value:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13005026,"byte_end":13005077,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"/ if let Some(num) = unsafe { p.as_ref() } {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13005078,"byte_end":13005124,"line_start":46,"line_end":46,"column_start":1,"column_end":47}},{"value":"/     println!(\"The number is {}.\", num);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13005125,"byte_end":13005168,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13005169,"byte_end":13005174,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13005175,"byte_end":13005227,"line_start":49,"line_end":49,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13005228,"byte_end":13005235,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13005236,"byte_end":13005239,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ # Multiple guards","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13005240,"byte_end":13005261,"line_start":52,"line_end":52,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13005262,"byte_end":13005265,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ Pinning is reentrant and it is perfectly legal to create multiple guards. In that case, the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13005266,"byte_end":13005361,"line_start":54,"line_end":54,"column_start":1,"column_end":96}},{"value":"/ thread will actually be pinned only when the first guard is created and unpinned when the last","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13005362,"byte_end":13005460,"line_start":55,"line_end":55,"column_start":1,"column_end":99}},{"value":"/ one is dropped:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13005461,"byte_end":13005480,"line_start":56,"line_end":56,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13005481,"byte_end":13005484,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13005485,"byte_end":13005492,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13005493,"byte_end":13005526,"line_start":59,"line_end":59,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13005527,"byte_end":13005530,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13005531,"byte_end":13005561,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13005562,"byte_end":13005592,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13005593,"byte_end":13005625,"line_start":63,"line_end":63,"column_start":1,"column_end":33}},{"value":"/ drop(guard1);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13005626,"byte_end":13005643,"line_start":64,"line_end":64,"column_start":1,"column_end":18}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13005644,"byte_end":13005676,"line_start":65,"line_end":65,"column_start":1,"column_end":33}},{"value":"/ drop(guard2);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13005677,"byte_end":13005694,"line_start":66,"line_end":66,"column_start":1,"column_end":18}},{"value":"/ assert!(!epoch::is_pinned());","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13005695,"byte_end":13005728,"line_start":67,"line_end":67,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13005729,"byte_end":13005736,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13005737,"byte_end":13005740,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`pin`]: super::pin","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13005741,"byte_end":13005764,"line_start":70,"line_end":70,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13006756,"byte_end":13006761,"line_start":91,"line_end":91,"column_start":12,"column_end":17},"name":"defer","qualname":"<Guard>::defer","value":"pub fn defer<F, R>(&Self, F) where F: FnOnce() -> R, F: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13005840,"byte_end":13005929,"line_start":76,"line_end":76,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13005934,"byte_end":13005959,"line_start":77,"line_end":77,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13005964,"byte_end":13005967,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13005972,"byte_end":13006065,"line_start":79,"line_end":79,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13006070,"byte_end":13006158,"line_start":80,"line_end":80,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13006163,"byte_end":13006253,"line_start":81,"line_end":81,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13006258,"byte_end":13006298,"line_start":82,"line_end":82,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13006303,"byte_end":13006306,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13006311,"byte_end":13006401,"line_start":84,"line_end":84,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13006406,"byte_end":13006497,"line_start":85,"line_end":85,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13006502,"byte_end":13006589,"line_start":86,"line_end":86,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13006594,"byte_end":13006614,"line_start":87,"line_end":87,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13006619,"byte_end":13006622,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13006627,"byte_end":13006714,"line_start":89,"line_end":89,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13006719,"byte_end":13006744,"line_start":90,"line_end":90,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13011118,"byte_end":13011133,"line_start":190,"line_end":190,"column_start":19,"column_end":34},"name":"defer_unchecked","qualname":"<Guard>::defer_unchecked","value":"pub unsafe fn defer_unchecked<F, R>(&Self, F) where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13006925,"byte_end":13007014,"line_start":101,"line_end":101,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13007019,"byte_end":13007044,"line_start":102,"line_end":102,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13007049,"byte_end":13007052,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13007057,"byte_end":13007150,"line_start":104,"line_end":104,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13007155,"byte_end":13007243,"line_start":105,"line_end":105,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13007248,"byte_end":13007338,"line_start":106,"line_end":106,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13007343,"byte_end":13007383,"line_start":107,"line_end":107,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13007388,"byte_end":13007391,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13007396,"byte_end":13007486,"line_start":109,"line_end":109,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13007491,"byte_end":13007582,"line_start":110,"line_end":110,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13007587,"byte_end":13007674,"line_start":111,"line_end":111,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13007679,"byte_end":13007699,"line_start":112,"line_end":112,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13007704,"byte_end":13007707,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13007712,"byte_end":13007799,"line_start":114,"line_end":114,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13007804,"byte_end":13007829,"line_start":115,"line_end":115,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13007834,"byte_end":13007837,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13007842,"byte_end":13007854,"line_start":117,"line_end":117,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13007859,"byte_end":13007862,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ The given function must not hold reference onto the stack. It is highly recommended that","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13007867,"byte_end":13007959,"line_start":119,"line_end":119,"column_start":5,"column_end":97}},{"value":"/ the passed function is **always** marked with `move` in order to prevent accidental","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13007964,"byte_end":13008051,"line_start":120,"line_end":120,"column_start":5,"column_end":92}},{"value":"/ borrows.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13008056,"byte_end":13008068,"line_start":121,"line_end":121,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13008073,"byte_end":13008076,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13008081,"byte_end":13008088,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13008093,"byte_end":13008126,"line_start":124,"line_end":124,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13008131,"byte_end":13008134,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13008139,"byte_end":13008169,"line_start":126,"line_end":126,"column_start":5,"column_end":35}},{"value":"/ let message = \"Hello!\";","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13008174,"byte_end":13008201,"line_start":127,"line_end":127,"column_start":5,"column_end":32}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13008206,"byte_end":13008218,"line_start":128,"line_end":128,"column_start":5,"column_end":17}},{"value":"/     // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13008223,"byte_end":13008298,"line_start":129,"line_end":129,"column_start":5,"column_end":80}},{"value":"/     guard.defer_unchecked(move || {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13008303,"byte_end":13008342,"line_start":130,"line_end":130,"column_start":5,"column_end":44}},{"value":"/         println!(\"{}\", message);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13008347,"byte_end":13008383,"line_start":131,"line_end":131,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13008388,"byte_end":13008399,"line_start":132,"line_end":132,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13008404,"byte_end":13008409,"line_start":133,"line_end":133,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13008414,"byte_end":13008421,"line_start":134,"line_end":134,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13008426,"byte_end":13008429,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute `f`, so anything accessed by","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13008434,"byte_end":13008528,"line_start":136,"line_end":136,"column_start":5,"column_end":99}},{"value":"/ the closure must be `Send`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13008533,"byte_end":13008564,"line_start":137,"line_end":137,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13008569,"byte_end":13008572,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `F: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13008577,"byte_end":13008672,"line_start":139,"line_end":139,"column_start":5,"column_end":100}},{"value":"/ `F: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13008677,"byte_end":13008769,"line_start":140,"line_end":140,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13008774,"byte_end":13008863,"line_start":141,"line_end":141,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13008868,"byte_end":13008871,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13008876,"byte_end":13008889,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13008894,"byte_end":13008947,"line_start":144,"line_end":144,"column_start":5,"column_end":58}},{"value":"/ guard.defer_unchecked(move || shared.into_owned()); // `Shared` is not `Send`!","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13008952,"byte_end":13009034,"line_start":145,"line_end":145,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13009039,"byte_end":13009046,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13009051,"byte_end":13009054,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the deferred function,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13009059,"byte_end":13009152,"line_start":148,"line_end":148,"column_start":5,"column_end":98}},{"value":"/ because it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13009157,"byte_end":13009252,"line_start":149,"line_end":149,"column_start":5,"column_end":100}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13009257,"byte_end":13009317,"line_start":150,"line_end":150,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13009322,"byte_end":13009325,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13009330,"byte_end":13009344,"line_start":152,"line_end":152,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13009349,"byte_end":13009352,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13009357,"byte_end":13009443,"line_start":154,"line_end":154,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13009448,"byte_end":13009542,"line_start":155,"line_end":155,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13009547,"byte_end":13009643,"line_start":156,"line_end":156,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13009648,"byte_end":13009740,"line_start":157,"line_end":157,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13009745,"byte_end":13009801,"line_start":158,"line_end":158,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13009806,"byte_end":13009809,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13009814,"byte_end":13009821,"line_start":160,"line_end":160,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13009826,"byte_end":13009882,"line_start":161,"line_end":161,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13009887,"byte_end":13009931,"line_start":162,"line_end":162,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13009936,"byte_end":13009939,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13009944,"byte_end":13009975,"line_start":164,"line_end":164,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13009980,"byte_end":13009983,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13009988,"byte_end":13010065,"line_start":166,"line_end":166,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13010070,"byte_end":13010101,"line_start":167,"line_end":167,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13010106,"byte_end":13010109,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13010114,"byte_end":13010144,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13010149,"byte_end":13010179,"line_start":170,"line_end":170,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13010184,"byte_end":13010187,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13010192,"byte_end":13010269,"line_start":172,"line_end":172,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13010274,"byte_end":13010346,"line_start":173,"line_end":173,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13010351,"byte_end":13010354,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13010359,"byte_end":13010380,"line_start":175,"line_end":175,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13010385,"byte_end":13010445,"line_start":176,"line_end":176,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13010450,"byte_end":13010532,"line_start":177,"line_end":177,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13010537,"byte_end":13010553,"line_start":178,"line_end":178,"column_start":5,"column_end":21}},{"value":"/         // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13010558,"byte_end":13010637,"line_start":179,"line_end":179,"column_start":5,"column_end":84}},{"value":"/         guard.defer_unchecked(move || {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13010642,"byte_end":13010685,"line_start":180,"line_end":180,"column_start":5,"column_end":48}},{"value":"/             println!(\"{} is now being deallocated.\", p.deref());","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13010690,"byte_end":13010758,"line_start":181,"line_end":181,"column_start":5,"column_end":73}},{"value":"/             // Now we have unique access to the object pointed to by `p` and can turn it","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13010763,"byte_end":13010855,"line_start":182,"line_end":182,"column_start":5,"column_end":97}},{"value":"/             // into an `Owned`. Dropping the `Owned` will deallocate the object.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13010860,"byte_end":13010944,"line_start":183,"line_end":183,"column_start":5,"column_end":89}},{"value":"/             drop(p.into_owned());","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13010949,"byte_end":13010986,"line_start":184,"line_end":184,"column_start":5,"column_end":42}},{"value":"/         });","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13010991,"byte_end":13011006,"line_start":185,"line_end":185,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13011011,"byte_end":13011020,"line_start":186,"line_end":186,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13011025,"byte_end":13011030,"line_start":187,"line_end":187,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13011035,"byte_end":13011087,"line_start":188,"line_end":188,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13011092,"byte_end":13011099,"line_start":189,"line_end":189,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13014777,"byte_end":13014790,"line_start":270,"line_end":270,"column_start":19,"column_end":32},"name":"defer_destroy","qualname":"<Guard>::defer_destroy","value":"pub unsafe fn defer_destroy<T>(&Self, Shared<, T>)","parent":null,"children":[],"decl_id":null,"docs":" Stores a destructor for an object so that it can be deallocated and dropped at some point\n after all currently pinned threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a destructor for an object so that it can be deallocated and dropped at some point","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13011372,"byte_end":13011465,"line_start":201,"line_end":201,"column_start":5,"column_end":98}},{"value":"/ after all currently pinned threads get unpinned.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13011470,"byte_end":13011522,"line_start":202,"line_end":202,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13011527,"byte_end":13011530,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ This method first stores the destructor into the thread-local (or handle-local) cache. If","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13011535,"byte_end":13011628,"line_start":204,"line_end":204,"column_start":5,"column_end":98}},{"value":"/ this cache becomes full, some destructors are moved into the global cache. At the same","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13011633,"byte_end":13011723,"line_start":205,"line_end":205,"column_start":5,"column_end":95}},{"value":"/ time, some destructors from both local and global caches may get executed in order to","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13011728,"byte_end":13011817,"line_start":206,"line_end":206,"column_start":5,"column_end":94}},{"value":"/ incrementally clean up the caches as they fill up.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13011822,"byte_end":13011876,"line_start":207,"line_end":207,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13011881,"byte_end":13011884,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly the destructor will be executed. The only guarantee is","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13011889,"byte_end":13011982,"line_start":209,"line_end":209,"column_start":5,"column_end":98}},{"value":"/ that it won't be executed until all currently pinned threads get unpinned. In theory, the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13011987,"byte_end":13012080,"line_start":210,"line_end":210,"column_start":5,"column_end":98}},{"value":"/ destructor might never run, but the epoch-based garbage collection will make an effort to","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13012085,"byte_end":13012178,"line_start":211,"line_end":211,"column_start":5,"column_end":98}},{"value":"/ execute it reasonably soon.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13012183,"byte_end":13012214,"line_start":212,"line_end":212,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13012219,"byte_end":13012222,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the destructor will simply be","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13012227,"byte_end":13012316,"line_start":214,"line_end":214,"column_start":5,"column_end":94}},{"value":"/ executed immediately.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13012321,"byte_end":13012346,"line_start":215,"line_end":215,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13012351,"byte_end":13012354,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13012359,"byte_end":13012371,"line_start":217,"line_end":217,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13012376,"byte_end":13012379,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The object must not be reachable by other threads anymore, otherwise it might be still in","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13012384,"byte_end":13012477,"line_start":219,"line_end":219,"column_start":5,"column_end":98}},{"value":"/ use when the destructor runs.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13012482,"byte_end":13012515,"line_start":220,"line_end":220,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13012520,"byte_end":13012523,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute the destructor, so the object","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13012528,"byte_end":13012623,"line_start":222,"line_end":222,"column_start":5,"column_end":100}},{"value":"/ must be sendable to other threads.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13012628,"byte_end":13012666,"line_start":223,"line_end":223,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13012671,"byte_end":13012674,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `T: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13012679,"byte_end":13012774,"line_start":225,"line_end":225,"column_start":5,"column_end":100}},{"value":"/ `T: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13012779,"byte_end":13012871,"line_start":226,"line_end":226,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13012876,"byte_end":13012965,"line_start":227,"line_end":227,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13012970,"byte_end":13012973,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13012978,"byte_end":13012991,"line_start":229,"line_end":229,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13012996,"byte_end":13013049,"line_start":230,"line_end":230,"column_start":5,"column_end":58}},{"value":"/ guard.defer_destroy(shared); // `Shared` is not `Send`!","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13013054,"byte_end":13013113,"line_start":231,"line_end":231,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13013118,"byte_end":13013125,"line_start":232,"line_end":232,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13013130,"byte_end":13013133,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the destructor, because","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13013138,"byte_end":13013232,"line_start":234,"line_end":234,"column_start":5,"column_end":99}},{"value":"/ it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13013237,"byte_end":13013324,"line_start":235,"line_end":235,"column_start":5,"column_end":92}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13013329,"byte_end":13013389,"line_start":236,"line_end":236,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13013394,"byte_end":13013397,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13013402,"byte_end":13013416,"line_start":238,"line_end":238,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13013421,"byte_end":13013424,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13013429,"byte_end":13013515,"line_start":240,"line_end":240,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13013520,"byte_end":13013614,"line_start":241,"line_end":241,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13013619,"byte_end":13013715,"line_start":242,"line_end":242,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13013720,"byte_end":13013812,"line_start":243,"line_end":243,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13013817,"byte_end":13013873,"line_start":244,"line_end":244,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13013878,"byte_end":13013881,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13013886,"byte_end":13013893,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13013898,"byte_end":13013954,"line_start":247,"line_end":247,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13013959,"byte_end":13014003,"line_start":248,"line_end":248,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13014008,"byte_end":13014011,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13014016,"byte_end":13014047,"line_start":250,"line_end":250,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13014052,"byte_end":13014055,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13014060,"byte_end":13014137,"line_start":252,"line_end":252,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13014142,"byte_end":13014173,"line_start":253,"line_end":253,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13014178,"byte_end":13014181,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13014186,"byte_end":13014216,"line_start":255,"line_end":255,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13014221,"byte_end":13014251,"line_start":256,"line_end":256,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13014256,"byte_end":13014259,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13014264,"byte_end":13014341,"line_start":258,"line_end":258,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13014346,"byte_end":13014418,"line_start":259,"line_end":259,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13014423,"byte_end":13014426,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13014431,"byte_end":13014452,"line_start":261,"line_end":261,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13014457,"byte_end":13014517,"line_start":262,"line_end":262,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13014522,"byte_end":13014604,"line_start":263,"line_end":263,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13014609,"byte_end":13014625,"line_start":264,"line_end":264,"column_start":5,"column_end":21}},{"value":"/         guard.defer_destroy(p);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13014630,"byte_end":13014665,"line_start":265,"line_end":265,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13014670,"byte_end":13014679,"line_start":266,"line_end":266,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13014684,"byte_end":13014689,"line_start":267,"line_end":267,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13014694,"byte_end":13014746,"line_start":268,"line_end":268,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13014751,"byte_end":13014758,"line_start":269,"line_end":269,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13015675,"byte_end":13015680,"line_start":294,"line_end":294,"column_start":12,"column_end":17},"name":"flush","qualname":"<Guard>::flush","value":"pub fn flush(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears up the thread-local cache of deferred functions by executing them or moving into the\n global cache.","sig":null,"attributes":[{"value":"/ Clears up the thread-local cache of deferred functions by executing them or moving into the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13014890,"byte_end":13014985,"line_start":274,"line_end":274,"column_start":5,"column_end":100}},{"value":"/ global cache.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13014990,"byte_end":13015007,"line_start":275,"line_end":275,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13015012,"byte_end":13015015,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ Call this method after deferring execution of a function if you want to get it executed as","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13015020,"byte_end":13015114,"line_start":277,"line_end":277,"column_start":5,"column_end":99}},{"value":"/ soon as possible. Flushing will make sure it is residing in in the global cache, so that","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13015119,"byte_end":13015211,"line_start":278,"line_end":278,"column_start":5,"column_end":97}},{"value":"/ any thread has a chance of taking the function and executing it.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13015216,"byte_end":13015284,"line_start":279,"line_end":279,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13015289,"byte_end":13015292,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, it is a no-op (nothing happens).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13015297,"byte_end":13015389,"line_start":281,"line_end":281,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13015394,"byte_end":13015397,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13015402,"byte_end":13015416,"line_start":283,"line_end":283,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13015421,"byte_end":13015424,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13015429,"byte_end":13015436,"line_start":285,"line_end":285,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13015441,"byte_end":13015474,"line_start":286,"line_end":286,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13015479,"byte_end":13015482,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13015487,"byte_end":13015517,"line_start":288,"line_end":288,"column_start":5,"column_end":35}},{"value":"/ guard.defer(move || {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13015522,"byte_end":13015547,"line_start":289,"line_end":289,"column_start":5,"column_end":30}},{"value":"/     println!(\"This better be printed as soon as possible!\");","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13015552,"byte_end":13015616,"line_start":290,"line_end":290,"column_start":5,"column_end":69}},{"value":"/ });","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13015621,"byte_end":13015628,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/ guard.flush();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13015633,"byte_end":13015651,"line_start":292,"line_end":292,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13015656,"byte_end":13015663,"line_start":293,"line_end":293,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13016899,"byte_end":13016904,"line_start":328,"line_end":328,"column_start":12,"column_end":17},"name":"repin","qualname":"<Guard>::repin","value":"pub fn repin(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Unpins and then immediately re-pins the thread.","sig":null,"attributes":[{"value":"/ Unpins and then immediately re-pins the thread.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13015804,"byte_end":13015855,"line_start":300,"line_end":300,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13015860,"byte_end":13015863,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you don't want delay the advancement of the global epoch by","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13015868,"byte_end":13015958,"line_start":302,"line_end":302,"column_start":5,"column_end":95}},{"value":"/ holding an old epoch. For safety, you should not maintain any guard-based reference across","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13015963,"byte_end":13016057,"line_start":303,"line_end":303,"column_start":5,"column_end":99}},{"value":"/ the call (the latter is enforced by `&mut self`). The thread will only be repinned if this","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13016062,"byte_end":13016156,"line_start":304,"line_end":304,"column_start":5,"column_end":99}},{"value":"/ is the only active guard for the current thread.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13016161,"byte_end":13016213,"line_start":305,"line_end":305,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13016218,"byte_end":13016221,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the call will be just no-op.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13016226,"byte_end":13016319,"line_start":307,"line_end":307,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13016324,"byte_end":13016327,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13016332,"byte_end":13016346,"line_start":309,"line_end":309,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13016351,"byte_end":13016354,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13016359,"byte_end":13016366,"line_start":311,"line_end":311,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13016371,"byte_end":13016420,"line_start":312,"line_end":312,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13016425,"byte_end":13016469,"line_start":313,"line_end":313,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13016474,"byte_end":13016477,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13016482,"byte_end":13016511,"line_start":315,"line_end":315,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13016516,"byte_end":13016549,"line_start":316,"line_end":316,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13016554,"byte_end":13016559,"line_start":317,"line_end":317,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13016564,"byte_end":13016603,"line_start":318,"line_end":318,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13016608,"byte_end":13016662,"line_start":319,"line_end":319,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13016667,"byte_end":13016672,"line_start":320,"line_end":320,"column_start":5,"column_end":10}},{"value":"/ guard.repin();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13016677,"byte_end":13016695,"line_start":321,"line_end":321,"column_start":5,"column_end":23}},{"value":"/ {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13016700,"byte_end":13016705,"line_start":322,"line_end":322,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13016710,"byte_end":13016749,"line_start":323,"line_end":323,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13016754,"byte_end":13016808,"line_start":324,"line_end":324,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13016813,"byte_end":13016818,"line_start":325,"line_end":325,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13016823,"byte_end":13016875,"line_start":326,"line_end":326,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13016880,"byte_end":13016887,"line_start":327,"line_end":327,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13018288,"byte_end":13018299,"line_start":365,"line_end":365,"column_start":12,"column_end":23},"name":"repin_after","qualname":"<Guard>::repin_after","value":"pub fn repin_after<F, R>(&mut Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily unpins the thread, executes the given function and then re-pins the thread.","sig":null,"attributes":[{"value":"/ Temporarily unpins the thread, executes the given function and then re-pins the thread.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13017028,"byte_end":13017119,"line_start":334,"line_end":334,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13017124,"byte_end":13017127,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to perform a long-running operation (e.g. sleeping)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13017132,"byte_end":13017223,"line_start":336,"line_end":336,"column_start":5,"column_end":96}},{"value":"/ and don't need to maintain any guard-based reference across the call (the latter is enforced","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13017228,"byte_end":13017324,"line_start":337,"line_end":337,"column_start":5,"column_end":101}},{"value":"/ by `&mut self`). The thread will only be unpinned if this is the only active guard for the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13017329,"byte_end":13017423,"line_start":338,"line_end":338,"column_start":5,"column_end":99}},{"value":"/ current thread.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13017428,"byte_end":13017447,"line_start":339,"line_end":339,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13017452,"byte_end":13017455,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the passed function is called","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13017460,"byte_end":13017554,"line_start":341,"line_end":341,"column_start":5,"column_end":99}},{"value":"/ directly without unpinning the thread.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13017559,"byte_end":13017601,"line_start":342,"line_end":342,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13017606,"byte_end":13017609,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13017614,"byte_end":13017628,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13017633,"byte_end":13017636,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13017641,"byte_end":13017648,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13017653,"byte_end":13017702,"line_start":347,"line_end":347,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13017707,"byte_end":13017751,"line_start":348,"line_end":348,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13017756,"byte_end":13017776,"line_start":349,"line_end":349,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13017781,"byte_end":13017809,"line_start":350,"line_end":350,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13017814,"byte_end":13017817,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13017822,"byte_end":13017851,"line_start":352,"line_end":352,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13017856,"byte_end":13017889,"line_start":353,"line_end":353,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13017894,"byte_end":13017899,"line_start":354,"line_end":354,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13017904,"byte_end":13017943,"line_start":355,"line_end":355,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13017948,"byte_end":13018002,"line_start":356,"line_end":356,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13018007,"byte_end":13018012,"line_start":357,"line_end":357,"column_start":5,"column_end":10}},{"value":"/ guard.repin_after(|| thread::sleep(Duration::from_millis(50)));","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13018017,"byte_end":13018084,"line_start":358,"line_end":358,"column_start":5,"column_end":72}},{"value":"/ {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13018089,"byte_end":13018094,"line_start":359,"line_end":359,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13018099,"byte_end":13018138,"line_start":360,"line_end":360,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13018143,"byte_end":13018197,"line_start":361,"line_end":361,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13018202,"byte_end":13018207,"line_start":362,"line_end":362,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13018212,"byte_end":13018264,"line_start":363,"line_end":363,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13018269,"byte_end":13018276,"line_start":364,"line_end":364,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13019445,"byte_end":13019454,"line_start":403,"line_end":403,"column_start":12,"column_end":21},"name":"collector","qualname":"<Guard>::collector","value":"pub fn collector(&Self) -> Option<&Collector>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this guard.","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this guard.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13018904,"byte_end":13018959,"line_start":387,"line_end":387,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13018964,"byte_end":13018967,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to ensure that all guards used with","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13018972,"byte_end":13019047,"line_start":389,"line_end":389,"column_start":5,"column_end":80}},{"value":"/ a data structure come from the same collector.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13019052,"byte_end":13019102,"line_start":390,"line_end":390,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13019107,"byte_end":13019110,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then `None` is returned.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13019115,"byte_end":13019199,"line_start":392,"line_end":392,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13019204,"byte_end":13019207,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13019212,"byte_end":13019226,"line_start":394,"line_end":394,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13019231,"byte_end":13019234,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13019239,"byte_end":13019246,"line_start":396,"line_end":396,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13019251,"byte_end":13019284,"line_start":397,"line_end":397,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13019289,"byte_end":13019292,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13019297,"byte_end":13019327,"line_start":399,"line_end":399,"column_start":5,"column_end":35}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13019332,"byte_end":13019362,"line_start":400,"line_end":400,"column_start":5,"column_end":35}},{"value":"/ assert!(guard1.collector() == guard2.collector());","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13019367,"byte_end":13019421,"line_start":401,"line_end":401,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13019426,"byte_end":13019433,"line_start":402,"line_end":402,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":503},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13022806,"byte_end":13022817,"line_start":510,"line_end":510,"column_start":15,"column_end":26},"name":"unprotected","qualname":"::guard::unprotected","value":"pub unsafe fn unprotected() -> &'static Guard","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","sig":null,"attributes":[{"value":"/ Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13019864,"byte_end":13019951,"line_start":423,"line_end":423,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13019952,"byte_end":13019955,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ This guard should be used in special occasions only. Note that it doesn't actually keep any","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13019956,"byte_end":13020051,"line_start":425,"line_end":425,"column_start":1,"column_end":96}},{"value":"/ thread pinned - it's just a fake guard that allows loading from [`Atomic`]s unsafely.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13020052,"byte_end":13020141,"line_start":426,"line_end":426,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13020142,"byte_end":13020145,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ Note that calling [`defer`] with a dummy guard will not defer the function - it will just","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13020146,"byte_end":13020239,"line_start":428,"line_end":428,"column_start":1,"column_end":94}},{"value":"/ execute the function immediately.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13020240,"byte_end":13020277,"line_start":429,"line_end":429,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13020278,"byte_end":13020281,"line_start":430,"line_end":430,"column_start":1,"column_end":4}},{"value":"/ If necessary, it's possible to create more dummy guards by cloning: `unprotected().clone()`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13020282,"byte_end":13020378,"line_start":431,"line_end":431,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13020379,"byte_end":13020382,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13020383,"byte_end":13020395,"line_start":433,"line_end":433,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13020396,"byte_end":13020399,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ Loading and dereferencing data from an [`Atomic`] using this guard is safe only if the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13020400,"byte_end":13020490,"line_start":435,"line_end":435,"column_start":1,"column_end":91}},{"value":"/ [`Atomic`] is not being concurrently modified by other threads.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13020491,"byte_end":13020558,"line_start":436,"line_end":436,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13020559,"byte_end":13020562,"line_start":437,"line_end":437,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13020563,"byte_end":13020577,"line_start":438,"line_end":438,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13020578,"byte_end":13020581,"line_start":439,"line_end":439,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13020582,"byte_end":13020589,"line_start":440,"line_end":440,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13020590,"byte_end":13020639,"line_start":441,"line_end":441,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13020640,"byte_end":13020685,"line_start":442,"line_end":442,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13020686,"byte_end":13020689,"line_start":443,"line_end":443,"column_start":1,"column_end":4}},{"value":"/ let a = Atomic::new(7);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13020690,"byte_end":13020717,"line_start":444,"line_end":444,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13020718,"byte_end":13020721,"line_start":445,"line_end":445,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13020722,"byte_end":13020734,"line_start":446,"line_end":446,"column_start":1,"column_end":13}},{"value":"/     // Load `a` without pinning the current thread.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13020735,"byte_end":13020790,"line_start":447,"line_end":447,"column_start":1,"column_end":56}},{"value":"/     a.load(Relaxed, epoch::unprotected());","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13020791,"byte_end":13020837,"line_start":448,"line_end":448,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13020838,"byte_end":13020841,"line_start":449,"line_end":449,"column_start":1,"column_end":4}},{"value":"/     // It's possible to create more dummy guards by calling `clone()`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13020842,"byte_end":13020916,"line_start":450,"line_end":450,"column_start":1,"column_end":75}},{"value":"/     let dummy = &epoch::unprotected().clone();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13020917,"byte_end":13020967,"line_start":451,"line_end":451,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13020968,"byte_end":13020971,"line_start":452,"line_end":452,"column_start":1,"column_end":4}},{"value":"/     dummy.defer(move || {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13020972,"byte_end":13021001,"line_start":453,"line_end":453,"column_start":1,"column_end":30}},{"value":"/         println!(\"This gets executed immediately.\");","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13021002,"byte_end":13021058,"line_start":454,"line_end":454,"column_start":1,"column_end":57}},{"value":"/     });","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13021059,"byte_end":13021070,"line_start":455,"line_end":455,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13021071,"byte_end":13021074,"line_start":456,"line_end":456,"column_start":1,"column_end":4}},{"value":"/     // Dropping `dummy` doesn't affect the current thread - it's just a noop.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13021075,"byte_end":13021156,"line_start":457,"line_end":457,"column_start":1,"column_end":82}},{"value":"/ }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13021157,"byte_end":13021162,"line_start":458,"line_end":458,"column_start":1,"column_end":6}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13021163,"byte_end":13021215,"line_start":459,"line_end":459,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13021216,"byte_end":13021223,"line_start":460,"line_end":460,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13021224,"byte_end":13021227,"line_start":461,"line_end":461,"column_start":1,"column_end":4}},{"value":"/ The most common use of this function is when constructing or destructing a data structure.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13021228,"byte_end":13021322,"line_start":462,"line_end":462,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13021323,"byte_end":13021326,"line_start":463,"line_end":463,"column_start":1,"column_end":4}},{"value":"/ For example, we can use a dummy guard in the destructor of a Treiber stack because at that","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13021327,"byte_end":13021421,"line_start":464,"line_end":464,"column_start":1,"column_end":95}},{"value":"/ point no other thread could concurrently modify the [`Atomic`]s we are accessing.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13021422,"byte_end":13021507,"line_start":465,"line_end":465,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13021508,"byte_end":13021511,"line_start":466,"line_end":466,"column_start":1,"column_end":4}},{"value":"/ If we were to actually pin the current thread during destruction, that would just unnecessarily","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13021512,"byte_end":13021611,"line_start":467,"line_end":467,"column_start":1,"column_end":100}},{"value":"/ delay garbage collection and incur some performance cost, so in cases like these `unprotected`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13021612,"byte_end":13021710,"line_start":468,"line_end":468,"column_start":1,"column_end":99}},{"value":"/ is very helpful.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13021711,"byte_end":13021731,"line_start":469,"line_end":469,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13021732,"byte_end":13021735,"line_start":470,"line_end":470,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13021736,"byte_end":13021743,"line_start":471,"line_end":471,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13021744,"byte_end":13021793,"line_start":472,"line_end":472,"column_start":1,"column_end":50}},{"value":"/ use std::mem::ManuallyDrop;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13021794,"byte_end":13021825,"line_start":473,"line_end":473,"column_start":1,"column_end":32}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13021826,"byte_end":13021871,"line_start":474,"line_end":474,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13021872,"byte_end":13021875,"line_start":475,"line_end":475,"column_start":1,"column_end":4}},{"value":"/ struct Stack<T> {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13021876,"byte_end":13021897,"line_start":476,"line_end":476,"column_start":1,"column_end":22}},{"value":"/     head: Atomic<Node<T>>,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13021898,"byte_end":13021928,"line_start":477,"line_end":477,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13021929,"byte_end":13021934,"line_start":478,"line_end":478,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13021935,"byte_end":13021938,"line_start":479,"line_end":479,"column_start":1,"column_end":4}},{"value":"/ struct Node<T> {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13021939,"byte_end":13021959,"line_start":480,"line_end":480,"column_start":1,"column_end":21}},{"value":"/     data: ManuallyDrop<T>,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13021960,"byte_end":13021990,"line_start":481,"line_end":481,"column_start":1,"column_end":31}},{"value":"/     next: Atomic<Node<T>>,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13021991,"byte_end":13022021,"line_start":482,"line_end":482,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13022022,"byte_end":13022027,"line_start":483,"line_end":483,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13022028,"byte_end":13022031,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/ impl<T> Drop for Stack<T> {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13022032,"byte_end":13022063,"line_start":485,"line_end":485,"column_start":1,"column_end":32}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13022064,"byte_end":13022092,"line_start":486,"line_end":486,"column_start":1,"column_end":29}},{"value":"/         unsafe {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13022093,"byte_end":13022113,"line_start":487,"line_end":487,"column_start":1,"column_end":21}},{"value":"/             // Unprotected load.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13022114,"byte_end":13022150,"line_start":488,"line_end":488,"column_start":1,"column_end":37}},{"value":"/             let mut node = self.head.load(Relaxed, epoch::unprotected());","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13022151,"byte_end":13022228,"line_start":489,"line_end":489,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13022229,"byte_end":13022232,"line_start":490,"line_end":490,"column_start":1,"column_end":4}},{"value":"/             while let Some(n) = node.as_ref() {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13022233,"byte_end":13022284,"line_start":491,"line_end":491,"column_start":1,"column_end":52}},{"value":"/                 // Unprotected load.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13022285,"byte_end":13022325,"line_start":492,"line_end":492,"column_start":1,"column_end":41}},{"value":"/                 let next = n.next.load(Relaxed, epoch::unprotected());","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13022326,"byte_end":13022400,"line_start":493,"line_end":493,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13022401,"byte_end":13022404,"line_start":494,"line_end":494,"column_start":1,"column_end":4}},{"value":"/                 // Take ownership of the node, then drop its data and deallocate it.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13022405,"byte_end":13022493,"line_start":495,"line_end":495,"column_start":1,"column_end":89}},{"value":"/                 let mut o = node.into_owned();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13022494,"byte_end":13022544,"line_start":496,"line_end":496,"column_start":1,"column_end":51}},{"value":"/                 ManuallyDrop::drop(&mut o.data);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13022545,"byte_end":13022597,"line_start":497,"line_end":497,"column_start":1,"column_end":53}},{"value":"/                 drop(o);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13022598,"byte_end":13022626,"line_start":498,"line_end":498,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13022627,"byte_end":13022630,"line_start":499,"line_end":499,"column_start":1,"column_end":4}},{"value":"/                 node = next;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13022631,"byte_end":13022663,"line_start":500,"line_end":500,"column_start":1,"column_end":33}},{"value":"/             }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13022664,"byte_end":13022681,"line_start":501,"line_end":501,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13022682,"byte_end":13022695,"line_start":502,"line_end":502,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13022696,"byte_end":13022705,"line_start":503,"line_end":503,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13022706,"byte_end":13022711,"line_start":504,"line_end":504,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13022712,"byte_end":13022719,"line_start":505,"line_end":505,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13022720,"byte_end":13022723,"line_start":506,"line_end":506,"column_start":1,"column_end":4}},{"value":"/ [`Atomic`]: super::Atomic","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13022724,"byte_end":13022753,"line_start":507,"line_end":507,"column_start":1,"column_end":30}},{"value":"/ [`defer`]: Guard::defer","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13022754,"byte_end":13022781,"line_start":508,"line_end":508,"column_start":1,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13022782,"byte_end":13022791,"line_start":509,"line_end":509,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":893},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\default.rs","byte_start":13076229,"byte_end":13076232,"line_start":31,"line_end":31,"column_start":8,"column_end":11},"name":"pin","qualname":"::default::pin","value":"pub fn pin() -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the current thread.\n","sig":null,"attributes":[{"value":"/ Pins the current thread.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\default.rs","byte_start":13076183,"byte_end":13076211,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\default.rs","byte_start":13076212,"byte_end":13076221,"line_start":30,"line_end":30,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":895},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\default.rs","byte_start":13076357,"byte_end":13076366,"line_start":37,"line_end":37,"column_start":8,"column_end":17},"name":"is_pinned","qualname":"::default::is_pinned","value":"pub fn is_pinned() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the current thread is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the current thread is pinned.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\default.rs","byte_start":13076288,"byte_end":13076339,"line_start":35,"line_end":35,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\default.rs","byte_start":13076340,"byte_end":13076349,"line_start":36,"line_end":36,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":897},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\default.rs","byte_start":13076476,"byte_end":13076493,"line_start":42,"line_end":42,"column_start":8,"column_end":25},"name":"default_collector","qualname":"::default::default_collector","value":"pub fn default_collector() -> &'static Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the default global collector.\n","sig":null,"attributes":[{"value":"/ Returns the default global collector.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\default.rs","byte_start":13076427,"byte_end":13076468,"line_start":41,"line_end":41,"column_start":1,"column_end":42}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":4694,"byte_end":4704,"line_start":108,"line_end":108,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12928825,"byte_end":12928845,"line_start":42,"line_end":42,"column_start":52,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12930272,"byte_end":12930280,"line_start":79,"line_end":79,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12934054,"byte_end":12934055,"line_start":194,"line_end":194,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12937276,"byte_end":12937282,"line_start":296,"line_end":296,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12937347,"byte_end":12937353,"line_start":297,"line_end":297,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12937369,"byte_end":12937375,"line_start":299,"line_end":299,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12937765,"byte_end":12937771,"line_start":315,"line_end":315,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":179},{"krate":0,"index":181},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":191},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":203},{"krate":0,"index":207},{"krate":0,"index":209},{"krate":0,"index":211},{"krate":0,"index":213},{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12961418,"byte_end":12961424,"line_start":942,"line_end":942,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12961771,"byte_end":12961777,"line_start":954,"line_end":954,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12962065,"byte_end":12962071,"line_start":962,"line_end":962,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12962418,"byte_end":12962424,"line_start":973,"line_end":973,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12962536,"byte_end":12962542,"line_start":979,"line_end":979,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12962994,"byte_end":12963000,"line_start":997,"line_end":997,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12963103,"byte_end":12963109,"line_start":1003,"line_end":1003,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12963229,"byte_end":12963235,"line_start":1009,"line_end":1009,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12963584,"byte_end":12963590,"line_start":1024,"line_end":1024,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12964803,"byte_end":12964808,"line_start":1065,"line_end":1065,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12965315,"byte_end":12965320,"line_start":1088,"line_end":1088,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12966970,"byte_end":12966975,"line_start":1148,"line_end":1148,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":265},{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12968702,"byte_end":12968707,"line_start":1212,"line_end":1212,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12968897,"byte_end":12968902,"line_start":1221,"line_end":1221,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12969180,"byte_end":12969185,"line_start":1232,"line_end":1232,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12969326,"byte_end":12969331,"line_start":1238,"line_end":1238,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12969524,"byte_end":12969529,"line_start":1247,"line_end":1247,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12969695,"byte_end":12969700,"line_start":1254,"line_end":1254,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12969790,"byte_end":12969795,"line_start":1260,"line_end":1260,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12970268,"byte_end":12970273,"line_start":1279,"line_end":1279,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12970383,"byte_end":12970388,"line_start":1285,"line_end":1285,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12970510,"byte_end":12970515,"line_start":1291,"line_end":1291,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12970621,"byte_end":12970626,"line_start":1297,"line_end":1297,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12971127,"byte_end":12971133,"line_start":1314,"line_end":1314,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12971307,"byte_end":12971313,"line_start":1323,"line_end":1323,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12971368,"byte_end":12971374,"line_start":1325,"line_end":1325,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12971620,"byte_end":12971626,"line_start":1340,"line_end":1340,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12972314,"byte_end":12972320,"line_start":1364,"line_end":1364,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12980465,"byte_end":12980471,"line_start":1624,"line_end":1624,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12981091,"byte_end":12981097,"line_start":1647,"line_end":1647,"column_start":62,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12981224,"byte_end":12981230,"line_start":1653,"line_end":1653,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12981304,"byte_end":12981310,"line_start":1655,"line_end":1655,"column_start":63,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12981475,"byte_end":12981481,"line_start":1661,"line_end":1661,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12981629,"byte_end":12981635,"line_start":1667,"line_end":1667,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12981938,"byte_end":12981944,"line_start":1678,"line_end":1678,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12982135,"byte_end":12982141,"line_start":1684,"line_end":1684,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\collector.rs","byte_start":12983377,"byte_end":12983386,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\collector.rs","byte_start":12983411,"byte_end":12983420,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\collector.rs","byte_start":12983442,"byte_end":12983451,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\collector.rs","byte_start":12983565,"byte_end":12983574,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\collector.rs","byte_start":12983816,"byte_end":12983825,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\collector.rs","byte_start":12984023,"byte_end":12984032,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\collector.rs","byte_start":12984160,"byte_end":12984169,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\collector.rs","byte_start":12984343,"byte_end":12984352,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\collector.rs","byte_start":12984463,"byte_end":12984474,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\collector.rs","byte_start":12984934,"byte_end":12984945,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\collector.rs","byte_start":12985092,"byte_end":12985103,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\deferred.rs","byte_start":12995850,"byte_end":12995858,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\deferred.rs","byte_start":12995982,"byte_end":12995990,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":431},{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\epoch.rs","byte_start":13000075,"byte_end":13000080,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\epoch.rs","byte_start":13001884,"byte_end":13001895,"line_start":82,"line_end":82,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13005828,"byte_end":13005833,"line_start":75,"line_end":75,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":482},{"krate":0,"index":485},{"krate":0,"index":489},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13019579,"byte_end":13019584,"line_start":408,"line_end":408,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13019754,"byte_end":13019759,"line_start":417,"line_end":417,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13023096,"byte_end":13023108,"line_start":515,"line_end":515,"column_start":26,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\internal.rs","byte_start":13026264,"byte_end":13026267,"line_start":72,"line_end":72,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\internal.rs","byte_start":13026277,"byte_end":13026280,"line_start":74,"line_end":74,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\internal.rs","byte_start":13027229,"byte_end":13027232,"line_start":109,"line_end":109,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\internal.rs","byte_start":13027384,"byte_end":13027387,"line_start":118,"line_end":118,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\internal.rs","byte_start":13027776,"byte_end":13027779,"line_start":130,"line_end":130,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\internal.rs","byte_start":13028186,"byte_end":13028195,"line_start":146,"line_end":146,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\internal.rs","byte_start":13028205,"byte_end":13028214,"line_start":148,"line_end":148,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\internal.rs","byte_start":13028896,"byte_end":13028902,"line_start":169,"line_end":169,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":623}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\internal.rs","byte_start":13034125,"byte_end":13034130,"line_start":311,"line_end":311,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":641},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\internal.rs","byte_start":13042917,"byte_end":13042922,"line_start":538,"line_end":538,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\sync\\list.rs","byte_start":13048987,"byte_end":13048992,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\sync\\list.rs","byte_start":13049128,"byte_end":13049133,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":700}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\sync\\list.rs","byte_start":13049646,"byte_end":13049650,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\sync\\list.rs","byte_start":13052233,"byte_end":13052237,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\sync\\list.rs","byte_start":13052769,"byte_end":13052773,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":717},{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\sync\\queue.rs","byte_start":13062594,"byte_end":13062599,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\sync\\queue.rs","byte_start":13062636,"byte_end":13062641,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\sync\\queue.rs","byte_start":13062657,"byte_end":13062662,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":768},{"krate":0,"index":772},{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\sync\\queue.rs","byte_start":13068582,"byte_end":13068587,"line_start":204,"line_end":204,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\lib.rs","byte_start":4694,"byte_end":4704,"line_start":108,"line_end":108,"column_start":17,"column_end":27},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":34},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12928825,"byte_end":12928845,"line_start":42,"line_end":42,"column_start":52,"column_end":72},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":100},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12930272,"byte_end":12930280,"line_start":79,"line_end":79,"column_start":32,"column_end":40},"kind":{"Impl":{"id":2}},"from":{"krate":2,"index":46167},"to":{"krate":0,"index":110}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12934054,"byte_end":12934055,"line_start":194,"line_end":194,"column_start":23,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":137},"to":{"krate":0,"index":127}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12937276,"byte_end":12937282,"line_start":296,"line_end":296,"column_start":59,"column_end":65},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":3024}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12937347,"byte_end":12937353,"line_start":297,"line_end":297,"column_start":59,"column_end":65},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12937369,"byte_end":12937375,"line_start":299,"line_end":299,"column_start":9,"column_end":15},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":161},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12937765,"byte_end":12937771,"line_start":315,"line_end":315,"column_start":29,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":161},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12961418,"byte_end":12961424,"line_start":942,"line_end":942,"column_start":44,"column_end":50},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12961771,"byte_end":12961777,"line_start":954,"line_end":954,"column_start":46,"column_end":52},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":9619}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12962065,"byte_end":12962071,"line_start":962,"line_end":962,"column_start":39,"column_end":45},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12962418,"byte_end":12962424,"line_start":973,"line_end":973,"column_start":41,"column_end":47},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12962536,"byte_end":12962542,"line_start":979,"line_end":979,"column_start":48,"column_end":54},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12962994,"byte_end":12963000,"line_start":997,"line_end":997,"column_start":26,"column_end":32},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12963103,"byte_end":12963109,"line_start":1003,"line_end":1003,"column_start":21,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12963229,"byte_end":12963235,"line_start":1009,"line_end":1009,"column_start":57,"column_end":63},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12963584,"byte_end":12963590,"line_start":1024,"line_end":1024,"column_start":28,"column_end":34},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12964803,"byte_end":12964808,"line_start":1065,"line_end":1065,"column_start":44,"column_end":49},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":247},"to":{"krate":0,"index":243}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12965315,"byte_end":12965320,"line_start":1088,"line_end":1088,"column_start":9,"column_end":14},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12966970,"byte_end":12966975,"line_start":1148,"line_end":1148,"column_start":29,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12968702,"byte_end":12968707,"line_start":1212,"line_end":1212,"column_start":38,"column_end":43},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12968897,"byte_end":12968902,"line_start":1221,"line_end":1221,"column_start":44,"column_end":49},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12969180,"byte_end":12969185,"line_start":1232,"line_end":1232,"column_start":26,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12969326,"byte_end":12969331,"line_start":1238,"line_end":1238,"column_start":39,"column_end":44},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":3242}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12969524,"byte_end":12969529,"line_start":1247,"line_end":1247,"column_start":42,"column_end":47},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":3255}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12969695,"byte_end":12969700,"line_start":1254,"line_end":1254,"column_start":21,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12969790,"byte_end":12969795,"line_start":1260,"line_end":1260,"column_start":26,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12970268,"byte_end":12970273,"line_start":1279,"line_end":1279,"column_start":43,"column_end":48},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":2623}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12970383,"byte_end":12970388,"line_start":1285,"line_end":1285,"column_start":46,"column_end":51},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":2626}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12970510,"byte_end":12970515,"line_start":1291,"line_end":1291,"column_start":42,"column_end":47},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12970621,"byte_end":12970626,"line_start":1297,"line_end":1297,"column_start":42,"column_end":47},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":2924}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12971127,"byte_end":12971133,"line_start":1314,"line_end":1314,"column_start":39,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12971307,"byte_end":12971313,"line_start":1323,"line_end":1323,"column_start":38,"column_end":44},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":3034}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12971368,"byte_end":12971374,"line_start":1325,"line_end":1325,"column_start":44,"column_end":50},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":301},"to":{"krate":0,"index":243}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12971620,"byte_end":12971626,"line_start":1340,"line_end":1340,"column_start":13,"column_end":19},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12972314,"byte_end":12972320,"line_start":1364,"line_end":1364,"column_start":33,"column_end":39},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12980465,"byte_end":12980471,"line_start":1624,"line_end":1624,"column_start":28,"column_end":34},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12981091,"byte_end":12981097,"line_start":1647,"line_end":1647,"column_start":62,"column_end":68},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2675}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12981224,"byte_end":12981230,"line_start":1653,"line_end":1653,"column_start":36,"column_end":42},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2680}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12981304,"byte_end":12981310,"line_start":1655,"line_end":1655,"column_start":63,"column_end":69},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2722}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12981475,"byte_end":12981481,"line_start":1661,"line_end":1661,"column_start":37,"column_end":43},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2711}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12981629,"byte_end":12981635,"line_start":1667,"line_end":1667,"column_start":44,"column_end":50},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12981938,"byte_end":12981944,"line_start":1678,"line_end":1678,"column_start":46,"column_end":52},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":9619}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\atomic.rs","byte_start":12982135,"byte_end":12982141,"line_start":1684,"line_end":1684,"column_start":41,"column_end":47},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\collector.rs","byte_start":12983377,"byte_end":12983386,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":3024}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\collector.rs","byte_start":12983411,"byte_end":12983420,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\collector.rs","byte_start":12983442,"byte_end":12983451,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\collector.rs","byte_start":12983565,"byte_end":12983574,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\collector.rs","byte_start":12983816,"byte_end":12983825,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\collector.rs","byte_start":12984023,"byte_end":12984032,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\collector.rs","byte_start":12984160,"byte_end":12984169,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":2675}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\collector.rs","byte_start":12984343,"byte_end":12984352,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":2680}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\collector.rs","byte_start":12984463,"byte_end":12984474,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":389},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\collector.rs","byte_start":12984934,"byte_end":12984945,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":389},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\collector.rs","byte_start":12985092,"byte_end":12985103,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":389},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\deferred.rs","byte_start":12995850,"byte_end":12995858,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":422},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\deferred.rs","byte_start":12995982,"byte_end":12995990,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":422},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\epoch.rs","byte_start":13000075,"byte_end":13000080,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":818},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\epoch.rs","byte_start":13001884,"byte_end":13001895,"line_start":82,"line_end":82,"column_start":6,"column_end":17},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":834},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13005828,"byte_end":13005833,"line_start":75,"line_end":75,"column_start":6,"column_end":11},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13019579,"byte_end":13019584,"line_start":408,"line_end":408,"column_start":15,"column_end":20},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":479},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13019754,"byte_end":13019759,"line_start":417,"line_end":417,"column_start":21,"column_end":26},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":479},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\guard.rs","byte_start":13023096,"byte_end":13023108,"line_start":515,"line_end":515,"column_start":26,"column_end":38},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":504},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\internal.rs","byte_start":13026264,"byte_end":13026267,"line_start":72,"line_end":72,"column_start":22,"column_end":25},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":593},"to":{"krate":2,"index":3024}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\internal.rs","byte_start":13026277,"byte_end":13026280,"line_start":74,"line_end":74,"column_start":6,"column_end":9},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":593},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\internal.rs","byte_start":13027229,"byte_end":13027232,"line_start":109,"line_end":109,"column_start":18,"column_end":21},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":593},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\internal.rs","byte_start":13027384,"byte_end":13027387,"line_start":118,"line_end":118,"column_start":15,"column_end":18},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":593},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\internal.rs","byte_start":13027776,"byte_end":13027779,"line_start":130,"line_end":130,"column_start":21,"column_end":24},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":593},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\internal.rs","byte_start":13028186,"byte_end":13028195,"line_start":146,"line_end":146,"column_start":22,"column_end":31},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":840},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\internal.rs","byte_start":13028205,"byte_end":13028214,"line_start":148,"line_end":148,"column_start":6,"column_end":15},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":840},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\internal.rs","byte_start":13028896,"byte_end":13028902,"line_start":169,"line_end":169,"column_start":6,"column_end":12},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\internal.rs","byte_start":13034125,"byte_end":13034130,"line_start":311,"line_end":311,"column_start":6,"column_end":11},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\internal.rs","byte_start":13042917,"byte_end":13042922,"line_start":538,"line_end":538,"column_start":27,"column_end":32},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":624},"to":{"krate":0,"index":683}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\sync\\list.rs","byte_start":13048987,"byte_end":13048992,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":847},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\sync\\list.rs","byte_start":13049128,"byte_end":13049133,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\sync\\list.rs","byte_start":13049646,"byte_end":13049650,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\sync\\list.rs","byte_start":13052233,"byte_end":13052237,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":851},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\sync\\list.rs","byte_start":13052769,"byte_end":13052773,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":688},"to":{"krate":2,"index":7914}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\sync\\queue.rs","byte_start":13062594,"byte_end":13062599,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":868},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\sync\\queue.rs","byte_start":13062636,"byte_end":13062641,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":868},"to":{"krate":2,"index":3024}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\sync\\queue.rs","byte_start":13062657,"byte_end":13062662,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":868},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.10\\src\\sync\\queue.rs","byte_start":13068582,"byte_end":13068587,"line_start":204,"line_end":204,"column_start":18,"column_end":23},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":868},"to":{"krate":2,"index":3266}}]}